<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL从安装到精通(三)---运维篇</title>
      <link href="/2024/09/10/MySQL%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E7%B2%BE%E9%80%9A-%E4%B8%89-%E8%BF%90%E7%BB%B4%E7%AF%87/"/>
      <url>/2024/09/10/MySQL%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E7%B2%BE%E9%80%9A-%E4%B8%89-%E8%BF%90%E7%BB%B4%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="运维"><a href="#运维" class="headerlink" title="运维"></a>运维</h1><h3 id="By-Xi17g3"><a href="#By-Xi17g3" class="headerlink" title="By Xi17g3"></a>By Xi17g3</h3><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h3 id="错误日志"><a href="#错误日志" class="headerlink" title="错误日志"></a>错误日志</h3><p><img src="/img/MySQL/image-20240728145630314.png" alt="image-20240728145630314"></p><p>实时查看文件尾部输出的日志</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tail -f /var/log/mysqld.log</span><br></pre></td></tr></table></figure><h3 id="二进制日志"><a href="#二进制日志" class="headerlink" title="二进制日志"></a>二进制日志</h3><p><img src="/img/MySQL/image-20240728145716823.png" alt="image-20240728145716823"></p><p>最终生成的二进制日志文字就在：  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/var/lib/mysql/binlog</span><br></pre></td></tr></table></figure><h3 id="查询日志-所有增删改查都与查询相关"><a href="#查询日志-所有增删改查都与查询相关" class="headerlink" title="查询日志(所有增删改查都与查询相关)"></a>查询日志(所有增删改查都与查询相关)</h3><p><img src="/img/MySQL/image-20240728150052613.png" alt="image-20240728150052613"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure><h3 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h3><p><strong>在进阶篇的SQL性能分析已经学到过了</strong></p><p><img src="/img/MySQL/image-20240728150403324.png" alt="image-20240728150403324"></p><h2 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><img src="/img/MySQL/image-20240728150609587.png" alt="image-20240728150609587"></p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><img src="/img/MySQL/image-20240728151034040.png" alt="image-20240728151034040"></p><h3 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h3><h4 id="主库配置"><a href="#主库配置" class="headerlink" title="主库配置"></a>主库配置</h4><p><img src="/img/MySQL/image-20240728174546976.png" alt="image-20240728174546976"></p><p><img src="/img/MySQL/image-20240728174730271.png" alt="image-20240728174730271"></p><p><img src="/img/MySQL/image-20240728175018008.png" alt="image-20240728175018008"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建从库使用时登陆的账户</span><br><span class="line">create user &#x27;itcast&#x27;@&#x27;%&#x27; IDENTIfied with mysql_native_password by &#x27;Root@123456&#x27;;</span><br><span class="line">grant replication slave on *.* to &#x27;itcast&#x27;@&#x27;%&#x27;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show master status;</span><br><span class="line">#当前二进制1日志文件坐标</span><br><span class="line">binlog.000022 |      655</span><br></pre></td></tr></table></figure><h4 id="从库配置"><a href="#从库配置" class="headerlink" title="从库配置"></a>从库配置</h4><p><img src="/img/MySQL/image-20240728175223005.png" alt="image-20240728175223005"></p><p>超级管理员只读写</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">super-read-only=1</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/image-20240728175331279.png" alt="image-20240728175331279"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#从库</span><br><span class="line">change replication source to source_host=&#x27;192.168.130.129&#x27;,source_user=&#x27;itcast&#x27;,source_password=&#x27;Root@123456&#x27;,source_log_file=&#x27;binlog.000022&#x27;,source_log_pos=655;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/image-20240728175415259.png" alt="image-20240728175415259"></p><p><strong>至此搭建完成</strong></p><p><img src="/img/MySQL/image-20240728175512352.png" alt="image-20240728175512352"></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、在主库上创建数据库、表，并插入数据</span><br><span class="line">#主库</span><br><span class="line">create database db1;</span><br><span class="line">use db1;</span><br><span class="line">create table tb_user(</span><br><span class="line">id int(11) primary key not null auto_increment,</span><br><span class="line">name varchar(50) not null</span><br><span class="line">)engine=innodb default charset=utf8mb4;</span><br><span class="line">insert into tb_user(id,name) values(1,&#x27;fuck&#x27;),(2,&#x27;you&#x27;);</span><br><span class="line">--2、在从库中查询数据，验证主从是否同步</span><br><span class="line">#从库</span><br><span class="line">show databases;</span><br><span class="line">#查询到新建的数据库db1，还有里面的表tb_user</span><br></pre></td></tr></table></figure><p><strong>报错</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ERROR 3021 (HY000): This operation cannot be performed with a running slave io thread; run STOP SLAVE IO_THREAD FOR CHANNEL &#x27;&#x27; first.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、停止从服务器的I/O线程</span><br><span class="line">STOP REPLICA IO_THREAD;</span><br><span class="line">注意：mysql8.0+中，SLAVE关键字已经被废弃，应该使用REPLICA关键字。在mysql5.7及之前版本中，可以使用STOP SLAVE IO_THREAD;</span><br><span class="line">2、等待I/O线程停止，可以通过检查从服务器的状态确认</span><br><span class="line">SHOW SLAVE STATUS \G;</span><br><span class="line"></span><br><span class="line">#IO和SQL都停了</span><br><span class="line">Slave_IO_Running: No</span><br><span class="line">Slave_SQL_Running: No</span><br><span class="line">#删除之前的主库授权从库用户，重新建立新用户</span><br><span class="line">重新执行change命令，然后打开IO和SQL进程</span><br><span class="line">START REPLICA IO_THREAD;</span><br><span class="line">START REPLICA SQL_THREAD;</span><br></pre></td></tr></table></figure><h2 id="分库分表"><a href="#分库分表" class="headerlink" title="分库分表"></a>分库分表</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><img src="/img/MySQL/image-20240728182024949.png" alt="image-20240728182024949"></p><h4 id="拆分方式"><a href="#拆分方式" class="headerlink" title="拆分方式"></a>拆分方式</h4><p><strong>垂直拆分</strong></p><p><img src="/img/MySQL/image-20240728182217904.png" alt="image-20240728182217904"></p><p><strong>水平拆分</strong></p><p><img src="/img/MySQL/image-20240728182312803.png" alt="image-20240728182312803"></p><h4 id="实现技术"><a href="#实现技术" class="headerlink" title="实现技术"></a>实现技术</h4><p><img src="/img/MySQL/image-20240728182519603.png" alt="image-20240728182519603"></p><h3 id="Mycat概述"><a href="#Mycat概述" class="headerlink" title="Mycat概述"></a>Mycat概述</h3><p><img src="/img/MySQL/image-20240728182717164.png" alt="image-20240728182717164"></p><p><img src="/img/MySQL/image-20240728204016591.png" alt="image-20240728204016591"></p><p><img src="/img/MySQL/image-20240728204222155.png" alt="image-20240728204222155"></p><p>Mycat下载地址：<a href="http://mycat.org.cn/">http://mycat.org.cn/</a></p><p><img src="/img/MySQL/image-20240728193511841.png" alt="image-20240728193511841"></p><p><strong>解压安装包，将jar包放在mycat&#x2F;lib目录下</strong></p><p>创建名为mycat的用户</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE USER &#x27;mycat&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><p>赋予权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRANT XA_RECOVER_ADMIN ON *.* TO &#x27;root&#x27;@&#x27;%&#x27;;</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#x27;mycat&#x27;@&#x27;%&#x27; ;</span><br></pre></td></tr></table></figure><p>刷新</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>配置物理地址</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim mycat/conf/datasources/prototypeDs.datasource.json</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;dbType&quot;</span><span class="punctuation">:</span><span class="string">&quot;mysql&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;idleTimeout&quot;</span><span class="punctuation">:</span><span class="number">60000</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;initSqls&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;initSqlsGetConnection&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;instanceType&quot;</span><span class="punctuation">:</span><span class="string">&quot;READ_WRITE&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;maxCon&quot;</span><span class="punctuation">:</span><span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;maxConnectTimeout&quot;</span><span class="punctuation">:</span><span class="number">3000</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;maxRetryCount&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;minCon&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;prototypeDs&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;password&quot;</span><span class="punctuation">:</span>密码<span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;JDBC&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;url&quot;</span><span class="punctuation">:</span><span class="string">&quot;jdbc:mysql://localhost:端口号?useUnicode=true&amp;serverTimezone=Asia/Shanghai&amp;characterEncoding=UTF-8&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;user&quot;</span><span class="punctuation">:</span>用户名<span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;weight&quot;</span><span class="punctuation">:</span><span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;dbType&quot;</span><span class="punctuation">:</span><span class="string">&quot;mysql&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;idleTimeout&quot;</span><span class="punctuation">:</span><span class="number">60000</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;initSqls&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;initSqlsGetConnection&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;instanceType&quot;</span><span class="punctuation">:</span><span class="string">&quot;READ_WRITE&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;maxCon&quot;</span><span class="punctuation">:</span><span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;maxConnectTimeout&quot;</span><span class="punctuation">:</span><span class="number">3000</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;maxRetryCount&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;minCon&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;prototypeDs&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;123456&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;JDBC&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span><span class="string">&quot;jdbc:mysql://localhost:3306/mysql?useUnicode=true&amp;serverTimezone=Asia/Shanghai&amp;characterEncoding=UTF-8&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span><span class="string">&quot;root&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;weight&quot;</span><span class="punctuation">:</span><span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>启动mycat</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#linux启动命令，进入bin目录</span><br><span class="line">./mycat start           #启动MyCat</span><br><span class="line">./mycat stop            #停止MyCat</span><br><span class="line">./mycat console         #前台运行MyCat带控制台输出</span><br><span class="line">./mycat restart         #重启MyCat</span><br><span class="line">./mycat pause           #暂停MyCat</span><br><span class="line">./mycat status          #查看启动状态</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/image-20240728200916650.png" alt="image-20240728200916650"></p><p>查看mycat日志</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tail -f logs/wrapper.log</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#mysql -u root -p</span><br><span class="line"></span><br><span class="line">#show databases;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/image-20240728202308351.png" alt="image-20240728202308351"></p><p>可以愉快的开始学习mycat2了</p><p><strong>报错</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Unable to locate any of the following operational binaries:</span><br><span class="line">  /home/xi17g3/Mycat2/mycat/bin/./wrapper-linux-x86-64 (Found but not executable.)</span><br><span class="line">  /home/xi17g3/Mycat2/mycat/bin/./wrapper-linux-x86-32 (Found but not executable.)</span><br><span class="line">  /home/xi17g3/Mycat2/mycat/bin/./wrapper</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod -R +x bin*</span><br></pre></td></tr></table></figure><h3 id="mycat入门"><a href="#mycat入门" class="headerlink" title="mycat入门"></a>mycat入门</h3><p>mycat连接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p -P 3306 -h 192.168.130.129</span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">clusters：集群</span><br><span class="line">datasources：数据源</span><br><span class="line">server.json：服务配置</span><br><span class="line">user：用户目录</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/image-20240730153547681.png" alt="image-20240730153547681"></p><h2 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h2><p><strong>主库从库都需要配置mycat2</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建数据库，创建dbw写库，指向集群中的master服务</span><br><span class="line">/*+ mycat:createDataSources&#123;&quot;name&quot;:&quot;dbW&quot;,&quot;url&quot;:&quot;jdbc:mysql://192.168.130.129:3306/mydb1?</span><br><span class="line">  useSSL=false&amp;characterEncoding=UTF-8&amp;useJDBCCompliantTimezoneShift=ture&quot;,&quot;user&quot;:&quot;mycat&quot;,&quot;password&quot;:&quot;123456&quot;&#125; */;</span><br><span class="line">#创建dbR读库，指向集群中的slave服务，如果有多个从库，依次继续创建</span><br><span class="line">/*+mycat:createDataSources&#123;&quot;name&quot;:&quot;dbR&quot;,&quot;url&quot;:&quot;jdbc:mysql://192.168.130.129:3306/mydb1?</span><br><span class="line">  useSSL=false&amp;characterEncoding=UTF-8&amp;useJDBCCompliantTimezoneShift=ture&quot;,&quot;user&quot;:&quot;mycat&quot;,&quot;password&quot;:&quot;123456&quot;&#125; */;</span><br><span class="line">#查看mycat的数据源</span><br><span class="line">/*+ mycat:showDataSources&#123;&#125; */;</span><br></pre></td></tr></table></figure><p><strong>mycat2实在拿捏不了，就学到这吧</strong></p><p>注明：至此运维篇已完结，MySQL系列笔记结束！本学习分享大部分记录了本人学习<a href="https://www.itcast.cn/">黑马程序员</a>MySQL系列课程的笔记，主要便于个人复习，也希望能给各位带来帮助，如有任何不足之处请指正！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL从安装到精通(二)---进阶篇</title>
      <link href="/2024/09/10/MySQL%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E7%B2%BE%E9%80%9A-%E4%BA%8C-%E8%BF%9B%E9%98%B6%E7%AF%87/"/>
      <url>/2024/09/10/MySQL%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E7%B2%BE%E9%80%9A-%E4%BA%8C-%E8%BF%9B%E9%98%B6%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="二-进阶篇"><a href="#二-进阶篇" class="headerlink" title="(二)进阶篇"></a>(二)进阶篇</h1><h3 id="By-Xi17g3"><a href="#By-Xi17g3" class="headerlink" title="By Xi17g3"></a>By Xi17g3</h3><h2 id="MySQL体系结构"><a href="#MySQL体系结构" class="headerlink" title="MySQL体系结构"></a>MySQL体系结构</h2><p><img src="/img/MySQL/image-20240710170523500.png" alt="image-20240710170523500"></p><h2 id="储存引擎"><a href="#储存引擎" class="headerlink" title="储存引擎"></a>储存引擎</h2><p>是存储数据、建立索引、更新&#x2F;查询数据等技术的实现方式。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#显示建表语句</span><br><span class="line">show create table account;</span><br><span class="line">#或者表上右键，查看DDL</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE `account` (</span><br><span class="line">  `id` int NOT NULL AUTO_INCREMENT COMMENT &#x27;主键ID&#x27;,</span><br><span class="line">  `name` varchar(10) DEFAULT NULL COMMENT &#x27;姓名&#x27;,</span><br><span class="line">  `money` int DEFAULT NULL COMMENT &#x27;余额&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT=&#x27;账号表&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#默认储存引擎</span><br><span class="line">ENGINE=InnoDB</span><br><span class="line">#自增，插入下一个数据的id为4</span><br><span class="line">AUTO_INCREMENT=4</span><br><span class="line">#当前表的字符集</span><br><span class="line">DEFAULT CHARSET=utf8mb4</span><br></pre></td></tr></table></figure><p>查看当前数据库支持的存储引擎</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show engines;</span><br></pre></td></tr></table></figure><h3 id="三种常见引擎的特点："><a href="#三种常见引擎的特点：" class="headerlink" title="三种常见引擎的特点："></a><strong>三种常见引擎的特点：</strong></h3><h4 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h4><p><img src="/img/MySQL/image-20240710172418937.png" alt="image-20240710172418937"></p><p>查看data文件目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show global variables like &quot;%datadir%&quot;;</span><br><span class="line">#C:\ProgramData\MySQL\MySQL Server 8.0\Data\</span><br></pre></td></tr></table></figure><p>注意： </p><p>ProgramData 是隐藏文件 需要在控制面板-&gt;文件资源管理器选项-&gt; 查看-&gt;隐藏文件和文件夹-&gt;选中  显示隐藏的文件、文件夹和驱动器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看idb文件</span><br><span class="line">ibd2sdi account.ibd</span><br></pre></td></tr></table></figure><p>行-&gt;页-&gt;区-&gt;段-&gt;表空间</p><h4 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h4><p><img src="/img/MySQL/image-20240710180201097.png" alt="image-20240710180201097"></p><h4 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h4><p><img src="/img/MySQL/image-20240710180340125.png" alt="image-20240710180340125"></p><h4 id="三种引擎的区别"><a href="#三种引擎的区别" class="headerlink" title="三种引擎的区别"></a>三种引擎的区别</h4><p><img src="/img/MySQL/image-20240710180432444.png" alt="image-20240710180432444"></p><p><img src="/img/MySQL/image-20240710180647431.png" alt="image-20240710180647431"></p><h3 id="Linux配置MySQL"><a href="#Linux配置MySQL" class="headerlink" title="Linux配置MySQL"></a>Linux配置MySQL</h3><p>下载finalshell服务器：<a href="http://www.hostbuf.com/">http://www.hostbuf.com/</a> </p><p><a href="https://blog.csdn.net/qq_46017623/article/details/130723343?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522172217340316800185842211%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=172217340316800185842211&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-130723343-null-null.142">下载cent7并配置好，与final建立连接</a>，推荐GUI服务器或者GNOME桌面。</p><p><img src="/img/MySQL/image-20240720165818283.png" alt="image-20240720165818283"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">问题<span class="number">1</span></span><br><span class="line">错误：无法创建 事务 锁定于 /var/lib/rpm/.rpm.lock (权限不够) </span><br><span class="line"></span><br><span class="line">解决方法：</span><br><span class="line">su切换为root模式</span><br><span class="line"></span><br><span class="line">问题<span class="number">2</span></span><br><span class="line">警告：mysql-community-client-plugins-<span class="number">8.0</span><span class="number">.26</span>-<span class="number">1.</span>el7.x86_64.rpm: 头V3 DSA/SHA256 Signature, 密钥 ID 5072e1f5: NOKEY</span><br><span class="line">错误：依赖检测失败：</span><br><span class="line">libcrypto.so<span class="number">.10</span>()(64bit) 被 mysql-community-client-plugins-<span class="number">8.0</span><span class="number">.26</span>-<span class="number">1.</span>el7.x86_64 需要</span><br><span class="line">libssl.so<span class="number">.10</span>()(64bit) 被 mysql-community-client-plugins-<span class="number">8.0</span><span class="number">.26</span>-<span class="number">1.</span>el7.x86_64 需要</span><br><span class="line"></span><br><span class="line">解决方法：</span><br><span class="line">此条警告信息是因为yum安装了旧版本的gpg keys造成的。解决方法：给后缀添加<span class="string">&quot;–force --nodeps&quot;</span>即可。--nodeps --force</span><br></pre></td></tr></table></figure><p>下载Linux版本的Mysql</p><p><img src="/img/MySQL/image-20240720205852005.png" alt="image-20240720205852005"></p><p>通过finalshell上传MySQL然后执行下面几条命令，出现报错请优先Google</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir mysql</span><br><span class="line">tar -xvf mysql-8.0.26-1.el7.x86_64.rpm-bundle\(1\).tar -C mysql</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/image-20240720210104311.png" alt="image-20240720210104311"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[root@localhost Mysql]<span class="comment"># rpm -ivh mysql-community-common-8.0.26-1.el7.x86_64.rpm</span></span><br><span class="line">[root@localhost Mysql]<span class="comment"># rpm -ivh mysql-community-client-plugins-8.0.26-1.el7.x86_64.rpm --nodeps --force</span></span><br><span class="line">[root@localhost Mysql]<span class="comment"># rpm -ivh mysql-community-libs-8.0.26-1.el7.x86_64.rpm --nodeps --force</span></span><br><span class="line">[root@localhost Mysql]<span class="comment"># rpm -ivh mysql-community-libs-compat-8.0.26-1.el7.x86_64.rpm --nodeps --force</span></span><br><span class="line">[root@localhost Mysql]<span class="comment"># yum install openssl-devel</span></span><br><span class="line">[root@localhost Mysql]<span class="comment"># rpm -ivh mysql-community-devel-8.0.26-1.el7.x86_64.rpm --nodeps --force</span></span><br><span class="line">[root@localhost Mysql]<span class="comment"># rpm -ivh mysql-community-client-8.0.26-1.el7.x86_64.rpm --nodeps --force</span></span><br><span class="line">[root@localhost Mysql]<span class="comment"># rpm -ivh mysql-community-server-8.0.26-1.el7.x86_64.rpm --nodeps --force</span></span><br></pre></td></tr></table></figure><p>至此装配完毕</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#打开mysql服务：</span><br><span class="line">systemctl start mysqld</span><br><span class="line">#登陆mysql</span><br><span class="line">mysql -u root -p</span><br><span class="line">#查看密码</span><br><span class="line">grep &#x27;temporary password&#x27; /var/log/mysqld.log</span><br><span class="line">cat /var/log/mysqld.log</span><br><span class="line">得到密码：</span><br><span class="line">V(kFYEs9ZD&gt;:</span><br></pre></td></tr></table></figure><p>修改root密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><p>创建远程访问</p><p><img src="/img/MySQL/image-20240720205202100.png" alt="image-20240720205202100"></p><p><strong>报错</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[HY000][1130] null, message from server: &quot;Host &#x27;192.168.130.1&#x27; is not allowed to connect to this MySQL server&quot;.</span><br></pre></td></tr></table></figure><p>先root登陆mysql</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user set host=&#x27;%&#x27; where user=&#x27;root&#x27;;</span><br><span class="line">Grant all privileges on root.* to &#x27;root&#x27;@&#x27;%&#x27;;  #执行两次</span><br><span class="line">alter user root identified with mysql_native_password by &#x27;123456&#x27;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line">show variables like &#x27;character%&#x27;; # 查看字符编码</span><br></pre></td></tr></table></figure><h2 id="索引-key"><a href="#索引-key" class="headerlink" title="索引(key)"></a>索引(key)</h2><h3 id="索引概述"><a href="#索引概述" class="headerlink" title="索引概述"></a>索引概述</h3><p><strong>什么是索引？</strong></p><p>是帮助MySQL高效获取数据的数据结构。在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式指向数据，这样就可以在这些数据结构上实现高级查找算法，这种数据结构就是索引。</p><p><img src="/img/MySQL/image-20240721114810137.png" alt="image-20240721114810137"></p><p><strong>索引的优缺点</strong></p><table><thead><tr><th align="center">优势</th><th align="center">劣势</th></tr></thead><tbody><tr><td align="center">提高数据检索的效率，降低数据库的IO成本</td><td align="center">索引列也是要占用空间的</td></tr><tr><td align="center">通过索引对列数据进行排序，降低数据排序的成本，降低CPU的消耗</td><td align="center">索引大大提高了查询效率，同时却也降低了更新表的速度，如对表进行INSERT、UPDATE、DELETE时</td></tr></tbody></table><h3 id="索引结构"><a href="#索引结构" class="headerlink" title="索引结构"></a>索引结构</h3><p><img src="/img/MySQL/image-20240721115908712.png" alt="image-20240721115908712"></p><p><img src="/img/MySQL/image-20240721115923873.png" alt="image-20240721115923873"></p><p><strong>我们平常说的索引，如果没有特别指明，都是指B+树结构组织的索引。</strong></p><h4 id="B-Trees"><a href="#B-Trees" class="headerlink" title="B-Trees"></a>B-Trees</h4><p><img src="/img/MySQL/image-20240721120636862.png" alt="image-20240721120636862"></p><p><strong>满足4key(5阶)即向上分裂</strong></p><h4 id="B-Trees-1"><a href="#B-Trees-1" class="headerlink" title="B+Trees"></a>B+Trees</h4><p><img src="/img/MySQL/image-20240721123925882.png" alt="image-20240721123925882"></p><p><strong>所有的数都会存在于叶子结点，叶子节点形成一个单向列表</strong></p><p>MySQL索引数据结构对经典的B+Tree进行了优化。在原B+Tree的基础上，增加了一个指向相邻叶子节点的链表指针，就形成了带有顺序指针的B+Tree，提高区间反问的性能。</p><p><img src="/img/MySQL/image-20240721124632587.png" alt="image-20240721124632587"></p><h4 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h4><p><img src="/img/MySQL/image-20240721144715677.png" alt="image-20240721144715677"></p><p>特点</p><p><img src="/img/MySQL/image-20240721144947525.png" alt="image-20240721144947525"></p><p><strong>为什么InnoDB存储引擎选择使用B+tree索引结构</strong></p><p><img src="/img/MySQL/image-20240721145302954.png" alt="image-20240721145302954"></p><h3 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h3><p><img src="/img/MySQL/image-20240721145440791.png" alt="image-20240721145440791"></p><p><img src="/img/MySQL/image-20240721145735247.png" alt="image-20240721145735247"></p><p><img src="/img/MySQL/image-20240721150010952.png" alt="image-20240721150010952"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from user where name=&#x27;Arm&#x27;;</span><br><span class="line">先查询二级索引，然后查询聚集索引</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/image-20240721150701984.png" alt="image-20240721150701984"></p><h3 id="索引语法"><a href="#索引语法" class="headerlink" title="索引语法"></a>索引语法</h3><p><img src="/img/MySQL/image-20240721150903851.png" alt="image-20240721150903851"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#建表</span><br><span class="line">create table emp(</span><br><span class="line">id int comment &#x27;编号&#x27;,</span><br><span class="line">workno varchar(10) comment &#x27;工号&#x27;,</span><br><span class="line">name varchar(10) comment &#x27;姓名&#x27;,</span><br><span class="line">gender char(1) comment &#x27;性别&#x27;,</span><br><span class="line">age tinyint unsigned comment &#x27;年龄&#x27;,</span><br><span class="line">idcard varchar(18) comment &#x27;身份证号&#x27;,</span><br><span class="line">workaddress varchar(50) comment &#x27;工作地址&#x27;,</span><br><span class="line">entrydate date comment &#x27;入职时间&#x27;,</span><br><span class="line">email varchar(10) comment &#x27;邮箱&#x27;</span><br><span class="line">) comment &#x27;员工表&#x27;;</span><br><span class="line">insert into emp (id,workno,name,gender,age,idcard,workaddress,entrydate,email) value</span><br><span class="line">(1,&#x27;1&#x27;,&#x27;柳岩&#x27;,&#x27;女&#x27;,20,&#x27;432121451523127859&#x27;,&#x27;北京&#x27;,&#x27;2000-01-01&#x27;,&#x27;1@2&#x27;),</span><br><span class="line">(2,&#x27;2&#x27;,&#x27;张无忌&#x27;,&#x27;男&#x27;,28,&#x27;432121451523127856&#x27;,&#x27;北京&#x27;,&#x27;2010-01-01&#x27;,&#x27;2@2&#x27;),</span><br><span class="line">(3,&#x27;3&#x27;,&#x27;韦一笑&#x27;,&#x27;男&#x27;,38,&#x27;432121451523127854&#x27;,&#x27;上海&#x27;,&#x27;2009-01-01&#x27;,&#x27;3@2&#x27;),</span><br><span class="line">(4,&#x27;4&#x27;,&#x27;赵敏&#x27;,&#x27;女&#x27;,18,&#x27;232121451523127854&#x27;,&#x27;北京&#x27;,&#x27;2008-01-01&#x27;,&#x27;4@2&#x27;),</span><br><span class="line">(5,&#x27;5&#x27;,&#x27;小招&#x27;,&#x27;女&#x27;,23,&#x27;433121451523127854&#x27;,&#x27;上海&#x27;,&#x27;2000-12-01&#x27;,&#x27;5@2&#x27;),</span><br><span class="line">(6,&#x27;6&#x27;,&#x27;杨上校&#x27;,&#x27;男&#x27;,88,&#x27;432121451523127554&#x27;,&#x27;北京&#x27;,&#x27;1998-01-20&#x27;,&#x27;6@2&#x27;),</span><br><span class="line">(7,&#x27;7&#x27;,&#x27;哈哈&#x27;,&#x27;女&#x27;,18,&#x27;432121455523127854&#x27;,&#x27;长沙&#x27;,&#x27;1988-01-01&#x27;,&#x27;7@2&#x27;),</span><br><span class="line">(8,&#x27;8&#x27;,&#x27;柳如烟&#x27;,&#x27;女&#x27;,88,&#x27;432121477773127854&#x27;,&#x27;西安&#x27;,&#x27;1978-01-01&#x27;,&#x27;8@2&#x27;),</span><br><span class="line">(9,&#x27;9&#x27;,&#x27;大壮&#x27;,&#x27;男&#x27;,29,&#x27;432121451529927854&#x27;,&#x27;江苏&#x27;,&#x27;2012-01-01&#x27;,&#x27;9@2&#x27;),</span><br><span class="line">(10,&#x27;10&#x27;,&#x27;刘马&#x27;,&#x27;男&#x27;,66,&#x27;433333451523127854&#x27;,&#x27;永州&#x27;,&#x27;2009-08-01&#x27;,&#x27;10@2&#x27;),</span><br><span class="line">(11,&#x27;11&#x27;,&#x27;新来的&#x27;,&#x27;女&#x27;,29,&#x27;702121451523127854&#x27;,&#x27;郴州&#x27;,&#x27;2024-07-02&#x27;,&#x27;11@2&#x27;);</span><br></pre></td></tr></table></figure><p>创建索引</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、name为姓名字段，该字段的值可能会重复，为该字段创建索引。</span><br><span class="line">create index idx_emp_name on emp(name);</span><br><span class="line">--2、idcard身份证号字段的值是非空的，且唯一的，为该字段创建唯一索引。</span><br><span class="line">create unique index idx_emp_idcard on emp(idcard);</span><br><span class="line">--3、为entrydate、age、workaddress创建联合索引。</span><br><span class="line">create index idx_emp_ent_age_workddr on emp(entrydate,age,workaddress);</span><br><span class="line">--4、为email建立合适的索引来提升查询效率</span><br><span class="line">create index idx_emp_email on emp(email);</span><br></pre></td></tr></table></figure><h3 id="SQL性能分析"><a href="#SQL性能分析" class="headerlink" title="SQL性能分析"></a>SQL性能分析</h3><h4 id="SQL执行频率"><a href="#SQL执行频率" class="headerlink" title="SQL执行频率"></a>SQL执行频率</h4><p>查看当前数据库的INSERT、UPDATE、DELETE、SELECT的访问频次：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show global status like &#x27;Com_______&#x27;;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/image-20240721162055738.png" alt="image-20240721162055738"></p><h4 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h4><p><strong>记录了所有执行时间超过指定参数(默认10秒)的所有SQL语句的日志。</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show variables like &#x27;slow_query_log&#x27;;</span><br><span class="line">#默认没有开启</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/my.cnf</span><br><span class="line">#慢查询日志</span><br><span class="line">slow_query_log=1</span><br><span class="line"></span><br><span class="line">slow_query_time=5</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看慢日志文件</span><br><span class="line">cd /var/lib/mysql</span><br><span class="line">cat localhost-slow.log</span><br></pre></td></tr></table></figure><p><strong>cat &#x2F;var&#x2F;log&#x2F;mysqld.log | grep ERROR #只查看具体的报错日志，省略了其他类型的日志</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /var/lib/mysql</span><br><span class="line">#查看慢日志文件尾部实时输出的内容</span><br><span class="line">tail -f localhost-slow.log</span><br></pre></td></tr></table></figure><h4 id="profile详情"><a href="#profile详情" class="headerlink" title="profile详情"></a>profile详情</h4><p>通过show profiles能够帮助我们了解时间损耗都到哪里去了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#通过have_profiling参数，能够看到当前MySQL是否支持profile操作</span><br><span class="line">select @@have_profiling;</span><br><span class="line">#查看profiling是否支持,默认不支持</span><br><span class="line">select @@profiling</span><br><span class="line">set @@profiling=1;</span><br></pre></td></tr></table></figure><p>经过一系列的业务SQL的操作，然后通过如下指令查看当前指令的耗时情况</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看每一条SQL的耗时基本情况</span><br><span class="line">show profiles;</span><br><span class="line">#查看指定query_id的SQL语句各个阶段的耗时情况</span><br><span class="line">show profile for query query_id;</span><br><span class="line">#查看指定query_id的SQL语句CPU的使用情况</span><br><span class="line">show profile cpu for query query_id;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/image-20240721172947005.png" alt="image-20240721172947005"></p><p><img src="/img/MySQL/image-20240721173137974.png" alt="image-20240721173137974"></p><p><img src="/img/MySQL/image-20240721173219649.png" alt="image-20240721173219649"></p><h4 id="explain执行计划"><a href="#explain执行计划" class="headerlink" title="explain执行计划"></a>explain执行计划</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">explain + [select语句]</span><br><span class="line">explain select * from emp where id=1;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/image-20240721173727020.png" alt="image-20240721173727020"></p><h3 id="索引使用"><a href="#索引使用" class="headerlink" title="索引使用"></a>索引使用</h3><h4 id="验证索引效率"><a href="#验证索引效率" class="headerlink" title="验证索引效率"></a>验证索引效率</h4><p><strong>在未建立索引之前，先执行SQL语句，查看SQL的耗时。</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where id=1\G;</span><br></pre></td></tr></table></figure><h4 id="针对字段创建索引"><a href="#针对字段创建索引" class="headerlink" title="针对字段创建索引"></a><strong>针对字段创建索引</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create index idx_emp on emp(id);</span><br><span class="line">#再次执行</span><br><span class="line">select * from emp where id=1\G;</span><br><span class="line">#发现建立了索引之后时间大大缩小</span><br></pre></td></tr></table></figure><h4 id="最左前缀法则"><a href="#最左前缀法则" class="headerlink" title="最左前缀法则"></a><strong>最左前缀法则</strong></h4><p><strong>创建索引</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create index idx_user_pro_age_sta on tb_user(profession,age,status)</span><br></pre></td></tr></table></figure><p><strong>若最左边的列不存在，则索引失效，如果跳过某一列，索引将部分失效</strong></p><p><img src="/img/MySQL/image-20240723130413326.png" alt="image-20240723130413326"></p><h4 id="索引失效"><a href="#索引失效" class="headerlink" title="索引失效"></a>索引失效</h4><h5 id="范围查询"><a href="#范围查询" class="headerlink" title="范围查询"></a>范围查询</h5><p><strong>出现范围查询时(&lt;,&gt;),右侧的列索引失效</strong></p><p>规避方法，用(&#x3D;&gt;,&lt;&#x3D;)</p><h5 id="索引列运算"><a href="#索引列运算" class="headerlink" title="索引列运算"></a>索引列运算</h5><p>不要在索引列上进行运算操作，索引将失效。</p><h5 id="字符串不加引号"><a href="#字符串不加引号" class="headerlink" title="字符串不加引号"></a>字符串不加引号</h5><p><img src="/img/MySQL/image-20240723132050913.png" alt="image-20240723132050913"></p><h5 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#后面模糊，走索引</span><br><span class="line">select * from tb_user where like &#x27;软件%&#x27;;</span><br><span class="line">#前面模糊，不走索引</span><br><span class="line">select * from tb_user where like &#x27;%工程&#x27;;</span><br></pre></td></tr></table></figure><h5 id="or连接的条件"><a href="#or连接的条件" class="headerlink" title="or连接的条件"></a>or连接的条件</h5><p><img src="/img/MySQL/image-20240723132751939.png" alt="image-20240723132751939"></p><h5 id="数据分布影响"><a href="#数据分布影响" class="headerlink" title="数据分布影响"></a>数据分布影响</h5><p>如果MySQL评估使用索引比全表更慢，则不使用索引</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#小部分，走索引</span><br><span class="line">select * from tb_user where phone&gt;=&#x27;17799990020&#x27;;</span><br><span class="line">#全表扫描</span><br><span class="line">select * from tb_user where phone&gt;=&#x27;17799990000&#x27;;</span><br><span class="line">#小部分，走索引</span><br><span class="line">select * from tb_user where phone&gt;=&#x27;17799990014&#x27;;</span><br></pre></td></tr></table></figure><h4 id="SQL提示"><a href="#SQL提示" class="headerlink" title="SQL提示"></a>SQL提示</h4><p><img src="/img/MySQL/image-20240723152752599.png" alt="image-20240723152752599"></p><h4 id="覆盖索引-回表查询"><a href="#覆盖索引-回表查询" class="headerlink" title="覆盖索引&amp;回表查询"></a>覆盖索引&amp;回表查询</h4><p><img src="/img/MySQL/image-20240723201351891.png" alt="image-20240723201351891"></p><p><strong>回表：先二级索引查，所得结果去聚集索引查</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#id--&gt;聚集索引 name--&gt;二级索引</span><br><span class="line"></span><br><span class="line">select from tb_user where id=2;</span><br><span class="line">#覆盖索引</span><br><span class="line">select id,name from tb_user where name=&#x27;Arm&#x27;;</span><br><span class="line">#无覆盖索引，gender需回表</span><br><span class="line">select id,name,gender from tb_user where name=&#x27;Arm&#x27;;</span><br></pre></td></tr></table></figure><h4 id="前缀索引"><a href="#前缀索引" class="headerlink" title="前缀索引"></a>前缀索引</h4><p><img src="/img/MySQL/image-20240723211343242.png" alt="image-20240723211343242"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create index idx_email_5 on tb_user (email(5));</span><br></pre></td></tr></table></figure><h4 id="单列索引与联合索引"><a href="#单列索引与联合索引" class="headerlink" title="单列索引与联合索引"></a>单列索引与联合索引</h4><p><strong>创建联合索引</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create unique index idx_user_phone_name on tb_user(phone,name);</span><br></pre></td></tr></table></figure><p>如果存在多个查询条件，考虑针对于查询字段建立索引时，建议建立联合索引，而非单列索引，因为单列容易回表。</p><h3 id="索引设计原则"><a href="#索引设计原则" class="headerlink" title="索引设计原则"></a>索引设计原则</h3><p><img src="/img/MySQL/image-20240723212304402.png" alt="image-20240723212304402"></p><h2 id="SQL优化"><a href="#SQL优化" class="headerlink" title="SQL优化"></a>SQL优化</h2><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><h4 id="insert优化"><a href="#insert优化" class="headerlink" title="insert优化"></a>insert优化</h4><p><img src="/img/MySQL/image-20240725161916571.png" alt="image-20240725161916571"></p><p><img src="/img/MySQL/image-20240725162228984.png" alt="image-20240725162228984"></p><p>load_user_100w_sort.sql文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看文件行数</span><br><span class="line">wc -l load_user_100w_sort.sql</span><br><span class="line">#查看前十行内容</span><br><span class="line">head load_user_100w_sort.sql</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看当前路径</span><br><span class="line">pwd</span><br><span class="line">#/home/xi17g3/load_user_100w_sort.sql</span><br></pre></td></tr></table></figure><p>先建表</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table emp(</span><br><span class="line">    id         int auto_increment comment &#x27;编号&#x27; primary key,</span><br><span class="line">    workno      varchar(10)       comment &#x27;工号&#x27;,</span><br><span class="line">    name        varchar(10)       comment &#x27;姓名&#x27;,</span><br><span class="line">    gender      char              comment &#x27;性别&#x27;,</span><br><span class="line">    age         tinyint unsigned  comment &#x27;年龄&#x27;,</span><br><span class="line">    idcard      varchar(18)       comment &#x27;身份证号&#x27;,</span><br><span class="line">    workaddress varchar(50)       comment &#x27;工作地址&#x27;,</span><br><span class="line">    entrydate   date              comment &#x27;入职时间&#x27;,</span><br><span class="line">    job         varchar(10)       comment &#x27;工作&#x27;,</span><br><span class="line">    salary      int               comment &#x27;工资&#x27;,</span><br><span class="line">    leaderidint              comment &#x27;所属领导&#x27;,</span><br><span class="line">    salgrade_grade int            comment &#x27;工资等级&#x27;,</span><br><span class="line">    dept_id     int               comment &#x27;部门号&#x27;</span><br><span class="line">)</span><br><span class="line">    comment &#x27;员工表&#x27;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">load data local infile &#x27;/home/xi17g3/load_user_100w_sort.sql&#x27; into table emp fields terminated by &#x27;,&#x27; lines terminated</span><br><span class="line"> by &#x27;\n&#x27;;</span><br></pre></td></tr></table></figure><p><strong>会有效减少大量数据插入时间</strong></p><h3 id="主键优化"><a href="#主键优化" class="headerlink" title="主键优化"></a>主键优化</h3><p><strong>主键乱序插入</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1,5,9,23,47,55,67,89,101,107,50</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/image-20240725170348296.png" alt="image-20240725170348296"></p><p>删除13,14,15,16</p><p><img src="/img/MySQL/image-20240725171737156.png" alt="image-20240725171737156"></p><h3 id="order-by优化"><a href="#order-by优化" class="headerlink" title="order by优化"></a>order by优化</h3><p><img src="/img/MySQL/image-20240727124832576.png" alt="image-20240727124832576"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建age和phone的索引</span><br><span class="line">create index idx_user_age_pho on tb_user(age,phone);</span><br><span class="line">#默认排序方式为升序asc</span><br><span class="line"></span><br><span class="line">#如需查询 (age asc phone desc)，则需要另创建索引，否则不会走索引</span><br><span class="line">create index idx_user_age_pho_ad on tb_user(age asc ,phone desc);</span><br></pre></td></tr></table></figure><h3 id="group-by优化"><a href="#group-by优化" class="headerlink" title="group by优化"></a>group by优化</h3><p><img src="/img/MySQL/image-20240727132933439.png" alt="image-20240727132933439"></p><h3 id="limit优化"><a href="#limit优化" class="headerlink" title="limit优化"></a>limit优化</h3><p><img src="/img/MySQL/image-20240727133524301.png" alt="image-20240727133524301"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#从第0个位置开始，查找后面十条记录</span><br><span class="line">select * from tb_sku limit 0,10</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select s.* from tb_sku s , (select id from tb_sku order by id limit 90000,10) a where s.id=a.id;</span><br></pre></td></tr></table></figure><h3 id="count优化"><a href="#count优化" class="headerlink" title="count优化"></a>count优化</h3><p><img src="/img/MySQL/image-20240727133842742.png" alt="image-20240727133842742"></p><p><strong>count的四种使用方法</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#count*，不取值，服务层直接按行进行累加</span><br><span class="line">select count(*) from tb_user;</span><br><span class="line">#count主键，直接进行累加，主键不存在null</span><br><span class="line">select count(id) from tb_user;</span><br><span class="line">#count字段,count不计数null值</span><br><span class="line">select count(profession) from tb_user;</span><br><span class="line">#count(1)，直接按行进行累加</span><br><span class="line">select count(1) from tb_user;</span><br></pre></td></tr></table></figure><p><strong>按照效率排序</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">count(字段)&lt;count(主键id)&lt;count(1)~count(*)，所以尽量使用count(*).</span><br></pre></td></tr></table></figure><h3 id="update优化-避免行锁"><a href="#update优化-避免行锁" class="headerlink" title="update优化(避免行锁)"></a>update优化(避免行锁)</h3> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">窗口1</span><br><span class="line">begin;</span><br><span class="line">update ... where id=1;</span><br><span class="line">commit;</span><br><span class="line">窗口2</span><br><span class="line">brgin;</span><br><span class="line">update ... where id=1;</span><br><span class="line">commit;</span><br><span class="line">二者同时发生，正常执行</span><br><span class="line"></span><br><span class="line">#发生表锁的情况</span><br><span class="line">begin;</span><br><span class="line">update course set name = &#x27;Kafka2&#x27; where name =&#x27;PHP&#x27;;</span><br><span class="line">因为PHP未建立索引，故会直接锁住该表</span><br><span class="line">#建立索引</span><br><span class="line">create index idx_course_name on course(name);</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="/img/MySQL/image-20240727142545211.png" alt="image-20240727142545211"></p><h2 id="视图-存储过程-触发器"><a href="#视图-存储过程-触发器" class="headerlink" title="视图&#x2F;存储过程&#x2F;触发器"></a>视图&#x2F;存储过程&#x2F;触发器</h2><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><p><strong>虚拟存在的一个表</strong></p><p><img src="/img/MySQL/image-20240727144824506.png" alt="image-20240727144824506"></p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建视图</span><br><span class="line">create or replace view emp_v_1 as select id,name from emp where id &lt;=20;</span><br></pre></td></tr></table></figure><h4 id="检查选项"><a href="#检查选项" class="headerlink" title="检查选项"></a>检查选项</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into emp_v_1 values(5,&#x27;Tom&#x27;);</span><br><span class="line">insert into emp_v_1 values(30,&#x27;Tom&#x27;);</span><br><span class="line">5,Tom会显示，30,Tom不会显示，但二者都会插入到emp表中</span><br><span class="line">#添加条件检查</span><br><span class="line">create or replace view emp_v_1 as select id,name from emp where id &lt;=20 with cascaded check option;</span><br></pre></td></tr></table></figure><p><strong>cascaded(独立)</strong></p><p><img src="/img/MySQL/image-20240730202938533.png" alt="image-20240730202938533"></p><p><strong>local(递归)</strong></p><p><img src="/img/MySQL/image-20240730203616199.png" alt="image-20240730203616199"></p><h4 id="更新及作用"><a href="#更新及作用" class="headerlink" title="更新及作用"></a>更新及作用</h4><p><img src="/img/MySQL/image-20240811184618618.png" alt="image-20240811184618618"></p><p>如果视图使用了函数则无法进行更新操作</p><p><img src="/img/MySQL/image-20240812111139813.png" alt="image-20240812111139813"></p><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><p><img src="/img/MySQL/image-20240812124647864.png" alt="image-20240812124647864"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、</span><br><span class="line">create view tb_user_view as select id,name,profession,age,gender,status,createtime from tb_user;</span><br><span class="line">select * from tb_user_view;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--2、</span><br><span class="line">create view tb_stu_course_view as select s.name,s.no,c.name from student s,student_course sc,course c where s.id=sc.studentid and sc.courseid=c.id;</span><br><span class="line">select * from tb_stu_course_view;</span><br></pre></td></tr></table></figure><h3 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h3><p><img src="/img/MySQL/image-20240812141116716.png" alt="image-20240812141116716"></p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">封装，复用</span><br><span class="line">可以接收参数，也可以返回数据</span><br><span class="line">减少网络交互，效率提升</span><br></pre></td></tr></table></figure><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><p><img src="/img/MySQL/image-20240812141314367.png" alt="image-20240812141314367"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建</span><br><span class="line">create procedure p1()</span><br><span class="line">begin</span><br><span class="line">select count(*) from student;</span><br><span class="line">end;</span><br><span class="line">#调用</span><br><span class="line">call p1();</span><br><span class="line">#查看</span><br><span class="line">select * from information_schema.routines where routine_schema=&#x27;hhh&#x27;;</span><br><span class="line"></span><br><span class="line">show create procedure p1;</span><br><span class="line">#删除</span><br><span class="line">drop procedure if exists p1;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><p>在命令行中，执行创建存储过程的SQL时，需要通过关键字delimiter指定SQL语句的结束符，以避免冲突。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">delimiter $</span><br></pre></td></tr></table></figure><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><h5 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h5><p><img src="/img/MySQL/image-20240812153439862.png" alt="image-20240812153439862"></p><h5 id="用户变量"><a href="#用户变量" class="headerlink" title="用户变量"></a>用户变量</h5><p><img src="/img/MySQL/image-20240812153720497.png" alt="image-20240812153720497"></p><h5 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h5><p><img src="/img/MySQL/image-20240812154159591.png" alt="image-20240812154159591"></p><h4 id="if判断"><a href="#if判断" class="headerlink" title="if判断"></a>if判断</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if 条件1 then</span><br><span class="line">...</span><br><span class="line">else 条件2 then</span><br><span class="line">...</span><br><span class="line">else</span><br><span class="line">...</span><br><span class="line">end if;</span><br></pre></td></tr></table></figure><p>例</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create procedure p3()</span><br><span class="line">begin</span><br><span class="line">declare score int default 58;</span><br><span class="line">declare result varchar(10);</span><br><span class="line"></span><br><span class="line">if score &gt;=85 then</span><br><span class="line">set result := &#x27;优秀&#x27;;</span><br><span class="line">elseif score &gt;=60 then</span><br><span class="line">set result := &#x27;及格&#x27;;</span><br><span class="line">else</span><br><span class="line">set result := &#x27;不及格&#x27;;</span><br><span class="line">end if;</span><br><span class="line">select result;</span><br><span class="line"></span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">#调用存储过程</span><br><span class="line">call p3();</span><br></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">in 输入out输出inout 既可输入也可输出</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create procedure p4(in score int,out result varchar(10))</span><br><span class="line">begin</span><br><span class="line">declare score int default 58;</span><br><span class="line">declare result varchar(10);</span><br><span class="line"></span><br><span class="line">if score &gt;=85 then</span><br><span class="line">set result := &#x27;优秀&#x27;;</span><br><span class="line">elseif score &gt;=60 then</span><br><span class="line">set result := &#x27;及格&#x27;;</span><br><span class="line">else</span><br><span class="line">set result := &#x27;不及格&#x27;;</span><br><span class="line">end if;</span><br><span class="line">select result;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">#调用存储过程</span><br><span class="line">call p4(68,@result);</span><br><span class="line">select @result;</span><br></pre></td></tr></table></figure><p>将传入的200分制的分数，进行换算，换算成百分制，然后返回分数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create procedure p5(inout score double)</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">set score :=sore*0.5;</span><br><span class="line"></span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">set @score=78;</span><br><span class="line">call p5(@score);</span><br><span class="line">select @score;</span><br></pre></td></tr></table></figure><h4 id="case"><a href="#case" class="headerlink" title="case"></a>case</h4><p><img src="/img/MySQL/image-20240824152341795.png" alt="image-20240824152341795"></p><p>案例</p><p><img src="/img/MySQL/image-20240824152437939.png" alt="image-20240824152437939"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create procedure p6(in month int)</span><br><span class="line">begin</span><br><span class="line">declare result varchar(10);</span><br><span class="line"></span><br><span class="line">case</span><br><span class="line">when month &gt;=1 and month &lt;=3 then</span><br><span class="line">set result := &#x27;第一季度&#x27;;</span><br><span class="line">when month &gt;=4 and month &lt;=6 then</span><br><span class="line">set result := &#x27;第二季度&#x27;;</span><br><span class="line">when month &gt;=7 and month &lt;=9 then</span><br><span class="line">set result := &#x27;第三季度&#x27;;</span><br><span class="line">when month &gt;=10 and month &lt;=12 then</span><br><span class="line">set result := &#x27;第四季度&#x27;;</span><br><span class="line">else</span><br><span class="line">set result := &#x27;非法参数&#x27;;</span><br><span class="line">end case;</span><br><span class="line">select concat(&#x27;您输入的月份为：&#x27;,month, &#x27; 所属季度为：&#x27;,result);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">call p6(13);</span><br></pre></td></tr></table></figure><h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><h5 id="while"><a href="#while" class="headerlink" title="while"></a>while</h5><p>计算从1累加到n的值，n为传入的参数值</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create procedure p7(in n int)</span><br><span class="line">begin</span><br><span class="line">declare total int default 0;</span><br><span class="line">while n&gt;0 do</span><br><span class="line">set total := totol+n;</span><br><span class="line">set n :=n-1;</span><br><span class="line">end while;</span><br><span class="line"></span><br><span class="line">select total;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">call p7(100);</span><br></pre></td></tr></table></figure><h5 id="repeat"><a href="#repeat" class="headerlink" title="repeat"></a>repeat</h5><p>repeat是有条件的循环控制语句。当满足条件的时候退出循环</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create procedure p8(in n int)</span><br><span class="line">begin</span><br><span class="line">declare total int default 0;</span><br><span class="line">repeat</span><br><span class="line">set total := total+n;</span><br><span class="line">set n := n-1;</span><br><span class="line">    until n &lt;=0</span><br><span class="line">end repeat;</span><br><span class="line">select total;</span><br><span class="line">end;</span><br><span class="line">call p8(100)</span><br></pre></td></tr></table></figure><h5 id="loop"><a href="#loop" class="headerlink" title="loop"></a>loop</h5><p><img src="/img/MySQL/image-20240824170359590.png" alt="image-20240824170359590"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、计算从1累加到n的值，n为传入的参数值。</span><br><span class="line">create procedure p9(in n int)</span><br><span class="line">begin</span><br><span class="line">declare total int default 0;</span><br><span class="line"></span><br><span class="line">sum:loop</span><br><span class="line">if n&lt;=0 then</span><br><span class="line">leave sum;</span><br><span class="line">end if;</span><br><span class="line"></span><br><span class="line">set total :=total+n;</span><br><span class="line">set n := n-1;</span><br><span class="line">end loop sum;</span><br><span class="line"></span><br><span class="line">select total;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">--2、计算聪1到n之间的偶数累加的值，n为传入的参数值。</span><br><span class="line">create procedure p10(in n int)</span><br><span class="line">begin</span><br><span class="line">declare total int default 0;</span><br><span class="line"></span><br><span class="line">sum:loop</span><br><span class="line">if n&lt;=0 then</span><br><span class="line">leave sum;</span><br><span class="line">end if;</span><br><span class="line"></span><br><span class="line">if n%2=1 then</span><br><span class="line">set n := n-1;</span><br><span class="line">iterate sum;</span><br><span class="line">end if;</span><br><span class="line"></span><br><span class="line">set total :=total+n;</span><br><span class="line">set n := n-1;</span><br><span class="line">end loop sum;</span><br><span class="line"></span><br><span class="line">select total;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">call p9(10);</span><br><span class="line">call p10(10);</span><br></pre></td></tr></table></figure><h5 id="游标"><a href="#游标" class="headerlink" title="游标"></a>游标</h5><p><img src="/img/MySQL/image-20240902205203501.png" alt="image-20240902205203501"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">请完成如下需求：</span><br><span class="line">根据传入的参数uage，来查询用户表tb_user中，所有的用户年龄小于等于uage的用户姓名(name)和专业(profession)，并将用户的姓名和专业插入到所创建的一张新表(id,name,profession)中。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#运行会报错</span><br><span class="line">create procedure p11(in uage int)</span><br><span class="line">begin</span><br><span class="line">declare uname varchar(100);</span><br><span class="line">declare upro varchar(100);</span><br><span class="line">declare u_cursor cursor for select name,profession from tb_user where age &lt;=age;</span><br><span class="line"></span><br><span class="line">drop table if exists tb_user_pro;</span><br><span class="line">create table if not exists tb_user_pro(</span><br><span class="line">id int primary key auto_increment,</span><br><span class="line">name varchar(100),</span><br><span class="line">profession varchar(100)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">open u_cursor;</span><br><span class="line">while ture do</span><br><span class="line">fetch u_cursor into uname,upro;</span><br><span class="line">insert into tb_user_pro values(null,name,upro);</span><br><span class="line">end while;</span><br><span class="line">close u_cousor;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">call p11(40);</span><br></pre></td></tr></table></figure><h5 id="条件处理程序"><a href="#条件处理程序" class="headerlink" title="条件处理程序"></a>条件处理程序</h5><p>解决上条问题</p><p><img src="/img/MySQL/image-20240902214905649.png" alt="image-20240902214905649"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#运行会报错</span><br><span class="line">create procedure p11(in uage int)</span><br><span class="line">begin</span><br><span class="line">declare uname varchar(100);</span><br><span class="line">declare upro varchar(100);</span><br><span class="line">declare u_cursor cursor for select name,profession from tb_user where age &lt;=age;</span><br><span class="line">declare exit handler for SQLSTATE &#x27;02000&#x27; close u_cursor;</span><br><span class="line"></span><br><span class="line">drop table if exists tb_user_pro;</span><br><span class="line">create table if not exists tb_user_pro(</span><br><span class="line">id int primary key auto_increment,</span><br><span class="line">name varchar(100),</span><br><span class="line">profession varchar(100)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">open u_cursor;</span><br><span class="line">while ture do</span><br><span class="line">fetch u_cursor into uname,upro;</span><br><span class="line">insert into tb_user_pro values(null,name,upro);</span><br><span class="line">end while;</span><br><span class="line">close u_cousor;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">call p11(40);</span><br></pre></td></tr></table></figure><h4 id="存储函数"><a href="#存储函数" class="headerlink" title="存储函数"></a>存储函数</h4><p>使用相对较少</p><p><img src="/img/MySQL/image-20240905185759957.png" alt="image-20240905185759957"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#计算从1开始的累加和</span><br><span class="line">create function fun1(n int)</span><br><span class="line">returns int deterministic</span><br><span class="line">begin</span><br><span class="line">declare total int default 0;</span><br><span class="line">while n&gt;0 do</span><br><span class="line">set total :=total+n;</span><br><span class="line">set n :=n-1;</span><br><span class="line">end while;</span><br><span class="line">return total;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">select fun1(200);</span><br></pre></td></tr></table></figure><h3 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h3><p><img src="/img/MySQL/image-20240905190359160.png" alt="image-20240905190359160"></p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><p><img src="/img/MySQL/image-20240905190530818.png" alt="image-20240905190530818"></p><h4 id="insert类型"><a href="#insert类型" class="headerlink" title="insert类型"></a>insert类型</h4><p><img src="/img/MySQL/image-20240906195256911.png" alt="image-20240906195256911"></p><p>插入数据触发器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create trigger tb_user_insert_trigger</span><br><span class="line">after insert on tb_user for each row</span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">insert into user_Logs(id,operation,operate_time,operate_id,operate_params) VALUES</span><br><span class="line"></span><br><span class="line">(null,&#x27;insert&#x27;,now(),new.id,</span><br><span class="line">     concat(&#x27;插入的数据内容为: id=&#x27;new.id,&#x27;,name=&#x27;new.name,&#x27;,phone=&#x27;,NEW.phone,&#x27;,email=&#x27;,NEW.email,&#x27;,profession=&#x27;,NEW.profession));</span><br><span class="line"></span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">#查看触发器</span><br><span class="line">show triggers;</span><br><span class="line">#删除触发器</span><br><span class="line">drop trigger tb_user_insert_trigger;</span><br></pre></td></tr></table></figure><p>插入数据到tb_user</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into tb_user(id,name,phone,email,profession,age,gender,status,createtime) VALUES (25,&#x27;二皇子&#x27;,188754645....)</span><br></pre></td></tr></table></figure><p>查询日志表可以看到相关插入信息</p><p><img src="/img/MySQL/image-20240907170649350.png" alt="image-20240907170649350"></p><h4 id="update类型"><a href="#update类型" class="headerlink" title="update类型"></a>update类型</h4><p>修改数据触发器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create trigger tb_user_insert_trigger</span><br><span class="line">   #行级触发器</span><br><span class="line">after insert on tb_user for each row</span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">insert into user_Logs(id,operation,operate_time,operate_id,operate_params) VALUES</span><br><span class="line"></span><br><span class="line">(null,&#x27;update&#x27;,now(),new.id,</span><br><span class="line">concat(&#x27;更新之前的数据内容为: id=&#x27;old.id,&#x27;,name=&#x27;old.name,&#x27;,phone=&#x27;,old.phone,&#x27;,email=&#x27;,old.email,&#x27;,profession=&#x27;,old.profession</span><br><span class="line">&#x27; | 更新之后的数据内容为: id=&#x27;new.id,&#x27;,name=&#x27;new.name,&#x27;,phone=&#x27;,NEW.phone,&#x27;,email=&#x27;,NEW.email,&#x27;,profession=&#x27;,NEW.profession));</span><br><span class="line"></span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">#查看触发器</span><br><span class="line">show triggers;</span><br><span class="line"></span><br><span class="line">update tb_user set age = 32 where id=23;</span><br><span class="line"></span><br><span class="line">#删除触发器</span><br><span class="line">drop trigger tb_user_update_trigger;</span><br></pre></td></tr></table></figure><h4 id="drop类型"><a href="#drop类型" class="headerlink" title="drop类型"></a>drop类型</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create trigger tb_user_insert_trigger</span><br><span class="line">   #行级触发器</span><br><span class="line">after insert on tb_user for each row</span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">insert into user_Logs(id,operation,operate_time,operate_id,operate_params) VALUES</span><br><span class="line"></span><br><span class="line">(null,&#x27;delete&#x27;,now(),new.id,</span><br><span class="line">concat(&#x27;删除之前的数据内容为: id=&#x27;old.id,&#x27;,name=&#x27;old.name,&#x27;,phone=&#x27;,old.phone,&#x27;,email=&#x27;,old.email,&#x27;,profession=&#x27;,old.profession));</span><br><span class="line"></span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">#查看触发器</span><br><span class="line">show triggers;</span><br><span class="line"></span><br><span class="line">delete from tb_user where id=26;</span><br><span class="line"></span><br><span class="line">#删除触发器</span><br><span class="line">drop trigger tb_user_delete_trigger;</span><br></pre></td></tr></table></figure><h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><p><img src="/img/MySQL/image-20240907185603359.png" alt="image-20240907185603359"></p><h2 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><img src="/img/MySQL/image-20240907185909132.png" alt="image-20240907185909132"></p><h3 id="锁的分类"><a href="#锁的分类" class="headerlink" title="锁的分类"></a>锁的分类</h3><ul><li>全局锁：锁定数据库中的所有表。</li><li>表级锁：每次操作锁住整张表。</li><li>行级锁：每次操作锁住对应的行数据。</li></ul><h4 id="全局锁"><a href="#全局锁" class="headerlink" title="全局锁"></a>全局锁</h4><p>一般用作数据备份时，只能读，不能写</p><p><img src="/img/MySQL/image-20240907190453962.png" alt="image-20240907190453962"></p><p>对当前数据库实例加全局锁</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flush tables with read lock;</span><br></pre></td></tr></table></figure><p>把数据库数据备份，存到sql文件中</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#在cmd运行即可</span><br><span class="line">mysqldump -uroot -p hhh &gt; D://sql/hhh.sql</span><br></pre></td></tr></table></figure><p>解全局锁</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unlock tables;</span><br></pre></td></tr></table></figure><h5 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h5><p><img src="/img/MySQL/image-20240907192209540.png" alt="image-20240907192209540"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysqldump --single-transaction -uroot hhh&gt;hhh.sql</span><br></pre></td></tr></table></figure><h4 id="表级锁"><a href="#表级锁" class="headerlink" title="表级锁"></a>表级锁</h4><p><img src="/img/MySQL/image-20240907192358453.png" alt="image-20240907192358453"></p><h5 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h5><ul><li><p>表锁</p><ol><li><p>表共享读锁</p><p>加锁后所有客户端只可以读取，不能修改。</p></li><li><p>表读者写锁</p><p>加锁后，只有主客户端只可以读取修改，其他客户端不可以读取修改。</p></li></ol><h6 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h6><p>加锁</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lock tables [表名] read/write;</span><br></pre></td></tr></table></figure><p>解锁</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lock tables;</span><br></pre></td></tr></table></figure></li><li><p>元数据锁</p><p><img src="/img/MySQL/image-20240907193626192.png" alt="image-20240907193626192"></p></li><li><p>意向锁</p><p>二者兼容则加锁，否则阻塞</p><p><img src="/img/MySQL/image-20240907194409320.png" alt="image-20240907194409320"></p><p><img src="/img/MySQL/image-20240907194643645.png" alt="image-20240907194643645"></p><p>添加行共享锁和对score表添加意向共享锁</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from score where id = 1 lock in share mode;</span><br></pre></td></tr></table></figure><p>查询状态</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select object_schema,object_name,index_name,lock_type,lock_mode,lock_data from performance_schema.data_locks;</span><br></pre></td></tr></table></figure></li></ul><h3 id="行级锁"><a href="#行级锁" class="headerlink" title="行级锁"></a>行级锁</h3><p><img src="/img/MySQL/image-20240907195543174.png" alt="image-20240907195543174"></p><ul><li><p>行锁</p><p><img src="/img/MySQL/image-20240907202135603.png" alt="image-20240907202135603"></p><p>常见的操作所进行的行锁</p><p><img src="/img/MySQL/image-20240907195912693.png" alt="image-20240907195912693"></p><p>演示</p><p><img src="/img/MySQL/image-20240907201933931.png" alt="image-20240907201933931"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查询状态</span><br><span class="line">select object_schema,object_name,index_name,lock_type,lock_mode,lock_data from performance_schema.data_locks;</span><br></pre></td></tr></table></figure></li><li><p>间隙锁</p><p><img src="/img/MySQL/image-20240907214632099.png" alt="image-20240907214632099"></p></li><li><p>临键锁</p></li></ul><h3 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h3><p><img src="/img/MySQL/image-20240907214914111.png" alt="image-20240907214914111"></p><h2 id="InnoDB引擎"><a href="#InnoDB引擎" class="headerlink" title="InnoDB引擎"></a>InnoDB引擎</h2><h3 id="结构-逻辑结构"><a href="#结构-逻辑结构" class="headerlink" title="结构-逻辑结构"></a>结构-逻辑结构</h3><p><img src="/img/MySQL/image-20240909192800318.png" alt="image-20240909192800318"></p><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><h4 id="内存框架"><a href="#内存框架" class="headerlink" title="内存框架"></a>内存框架</h4><h5 id="Buffer-Pool缓冲池"><a href="#Buffer-Pool缓冲池" class="headerlink" title="Buffer Pool缓冲池"></a>Buffer Pool缓冲池</h5><p><img src="/img/MySQL/image-20240909193248245.png" alt="image-20240909193248245"></p><h5 id="Change-Buffer"><a href="#Change-Buffer" class="headerlink" title="Change Buffer"></a>Change Buffer</h5><p><img src="/img/MySQL/image-20240909193458927.png" alt="image-20240909193458927"></p><h5 id="Adaptive-Hash-Index-自适应哈希索引"><a href="#Adaptive-Hash-Index-自适应哈希索引" class="headerlink" title="Adaptive Hash Index(自适应哈希索引)"></a>Adaptive Hash Index(自适应哈希索引)</h5><p>InnoDB引擎使用B+树的索引，但是哈希索引也有很大优点</p><p><img src="/img/MySQL/image-20240909193920649.png" alt="image-20240909193920649"></p><p>查看参数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show variables likes &#x27;%hash_index%&#x27;;</span><br></pre></td></tr></table></figure><h5 id="Log-Buffer"><a href="#Log-Buffer" class="headerlink" title="Log Buffer"></a>Log Buffer</h5><p><img src="/img/MySQL/image-20240909194225204.png" alt="image-20240909194225204"></p><p>查看参数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show variables likes &#x27;%log_buffer_size%&#x27;;</span><br><span class="line">show variables likes &#x27;%flush_log%&#x27;;</span><br></pre></td></tr></table></figure><h4 id="磁盘框架"><a href="#磁盘框架" class="headerlink" title="磁盘框架"></a>磁盘框架</h4><ul><li><h4 id="System-Tablespaces"><a href="#System-Tablespaces" class="headerlink" title="System Tablespaces"></a>System Tablespaces</h4><p>系统表空间</p></li><li><h4 id="File-Per-Table-Tablespaces"><a href="#File-Per-Table-Tablespaces" class="headerlink" title="File-Per-Table Tablespaces"></a>File-Per-Table Tablespaces</h4><p>每个表的文件表包含单个InnoDB表的数据和索引，并存储再文件系统上的单个数据文件中</p></li><li><h4 id="General-Tablespaces"><a href="#General-Tablespaces" class="headerlink" title="General Tablespaces"></a>General Tablespaces</h4><p>通用表空间</p></li><li><h4 id="Undo-Tablespaces"><a href="#Undo-Tablespaces" class="headerlink" title="Undo Tablespaces"></a>Undo Tablespaces</h4><p>撤销表空间</p></li><li><h4 id="Temporary-Tablespaces"><a href="#Temporary-Tablespaces" class="headerlink" title="Temporary Tablespaces"></a>Temporary Tablespaces</h4><p>临时表空间</p></li><li><h4 id="Doublewrite-Buffer-Files"><a href="#Doublewrite-Buffer-Files" class="headerlink" title="Doublewrite Buffer Files"></a>Doublewrite Buffer Files</h4><p>双写缓冲区</p></li><li><h4 id="Redo-Log"><a href="#Redo-Log" class="headerlink" title="Redo Log"></a>Redo Log</h4><p>重做日志</p></li></ul><p><img src="/img/MySQL/image-20240909194955994.png" alt="image-20240909194955994"></p><p><img src="/img/MySQL/image-20240909195252449.png" alt="image-20240909195252449"></p><p><img src="/img/MySQL/image-20240909195307954.png" alt="image-20240909195307954"></p><h4 id="后台线程"><a href="#后台线程" class="headerlink" title="后台线程"></a>后台线程</h4><p>查看InnoDB引擎的状态信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show engine innodb status;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/image-20240909201504703.png" alt="image-20240909201504703"></p><h3 id="事务原理"><a href="#事务原理" class="headerlink" title="事务原理"></a>事务原理</h3><h4 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h4><p><img src="/img/MySQL/image-20240909201738679.png" alt="image-20240909201738679"></p><p><img src="/img/MySQL/image-20240909201803360.png" alt="image-20240909201803360"></p><h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><ul><li><p>原子性</p><p><img src="/img/MySQL/image-20240909202707194.png" alt="image-20240909202707194"></p></li><li><p>持久性</p><p><img src="/img/MySQL/image-20240909202634034.png" alt="image-20240909202634034"></p></li><li><p>隔离性</p></li><li><p>一致性</p></li></ul><h3 id="MVCC"><a href="#MVCC" class="headerlink" title="MVCC"></a>MVCC</h3><h4 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h4><p><img src="/img/MySQL/image-20240909203058649.png" alt="image-20240909203058649"></p><p>一般情况下是重复读，添加了lock in share mode可以读取最新的记录</p><p><img src="/img/MySQL/image-20240909202943614.png" alt="image-20240909202943614"></p><h4 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h4><h5 id="隐藏字段"><a href="#隐藏字段" class="headerlink" title="隐藏字段"></a>隐藏字段</h5><p><img src="/img/MySQL/image-20240909203511831.png" alt="image-20240909203511831"></p><p>查看表空间文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ibd2sdi stu.ibd</span><br></pre></td></tr></table></figure><h5 id="undo-log版本链"><a href="#undo-log版本链" class="headerlink" title="undo log版本链"></a>undo log版本链</h5><p><img src="/img/MySQL/image-20240909204630061.png" alt="image-20240909204630061"></p><h5 id="readview"><a href="#readview" class="headerlink" title="readview"></a>readview</h5><p><img src="/img/MySQL/image-20240909204918657.png" alt="image-20240909204918657"></p><p><img src="/img/MySQL/image-20240909205145374.png" alt="image-20240909205145374"></p><p>事务读取</p><p><img src="/img/MySQL/image-20240909205752583.png" alt="image-20240909205752583"></p><p><img src="/img/MySQL/image-20240910163034923.png" alt="image-20240910163034923"></p><h3 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h3><p><img src="/img/MySQL/image-20240910163111038.png" alt="image-20240910163111038"></p><h2 id="MySQL管理"><a href="#MySQL管理" class="headerlink" title="MySQL管理"></a>MySQL管理</h2><h3 id="系统数据库"><a href="#系统数据库" class="headerlink" title="系统数据库"></a>系统数据库</h3><p><img src="/img/MySQL/image-20240910163447650.png" alt="image-20240910163447650"></p><h3 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h3><h4 id="mysql客户端工具"><a href="#mysql客户端工具" class="headerlink" title="mysql客户端工具"></a>mysql客户端工具</h4><p><img src="/img/MySQL/image-20240910163630065.png" alt="image-20240910163630065"></p><h4 id="mysqladmin"><a href="#mysqladmin" class="headerlink" title="mysqladmin"></a>mysqladmin</h4><p><img src="/img/MySQL/image-20240910163835995.png" alt="image-20240910163835995"></p><h4 id="mysqlbinlog"><a href="#mysqlbinlog" class="headerlink" title="mysqlbinlog"></a>mysqlbinlog</h4><p><img src="/img/MySQL/image-20240910170915811.png" alt="image-20240910170915811"></p><h4 id="mysqlshow"><a href="#mysqlshow" class="headerlink" title="mysqlshow"></a>mysqlshow</h4><p><img src="/img/MySQL/image-20240910171104694.png" alt="image-20240910171104694"></p><h4 id="mysqldump"><a href="#mysqldump" class="headerlink" title="mysqldump"></a>mysqldump</h4><p><img src="/img/MySQL/image-20240910171140271.png" alt="image-20240910171140271"></p><h4 id="mysqlimport-source"><a href="#mysqlimport-source" class="headerlink" title="mysqlimport&#x2F;source"></a>mysqlimport&#x2F;source</h4><p><img src="/img/MySQL/image-20240910171451190.png" alt="image-20240910171451190"></p><h4 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h4><p><img src="/img/MySQL/image-20240910180635748.png" alt="image-20240910180635748"></p><h2 id="进阶篇总结"><a href="#进阶篇总结" class="headerlink" title="进阶篇总结"></a>进阶篇总结</h2><p>其中索引为重中之重</p><p><img src="/img/MySQL/image-20240910180916750.png" alt="image-20240910180916750"></p><p>注明：至此进阶篇已完结，本学习分享大部分记录了本人学习<a href="https://www.itcast.cn/">黑马程序员</a>MySQL系列课程的笔记，主要便于个人复习，也希望能给各位带来帮助，如有任何不足之处请指正！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL从安装到精通(一)---基础篇</title>
      <link href="/2024/08/23/MySQL%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E7%B2%BE%E9%80%9A-%E4%B8%80-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
      <url>/2024/08/23/MySQL%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E7%B2%BE%E9%80%9A-%E4%B8%80-%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一-基础篇"><a href="#一-基础篇" class="headerlink" title="(一)基础篇"></a>(一)基础篇</h1><h3 id="By-Xi17g3"><a href="#By-Xi17g3" class="headerlink" title="By Xi17g3"></a>By Xi17g3</h3><h1 id="MySQL概述"><a href="#MySQL概述" class="headerlink" title="MySQL概述"></a>MySQL概述</h1><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="MySQL的下载与安装"><a href="#MySQL的下载与安装" class="headerlink" title="MySQL的下载与安装"></a>MySQL的下载与安装</h3><p>从MySQL官网下载MySQL Community Server版本：</p><p>下载地址：<a href="https://www.mysql.com/">MySQL官网</a></p><p>点击Downloads</p><p><img src="/img/MySQL/a8a3debf5fe040d5a6b531ea38202739.png" alt="a8a3debf5fe040d5a6b531ea38202739"></p><p>找到对应的版本，下载最新版本即可：</p><p><img src="/img/MySQL/b08e93cf1b0a49fe8f5e9a253c969711.png" alt="b08e93cf1b0a49fe8f5e9a253c969711"></p><p><img src="/img/MySQL/688860a9b77547ceb2257ecb0e515a47.png" alt="688860a9b77547ceb2257ecb0e515a47"></p><p>在文件夹找到自己下载的安装文件：</p><p><img src="/img/MySQL/20240711192003072.png" alt="20240711192003072"></p><p>进入选择选择自定义安装方式，然后点击next，进入下一步：</p><p><img src="/img/MySQL/4f29219b42084b4f9525c35aef4dd1bd.png" alt="4f29219b42084b4f9525c35aef4dd1bd"></p><p>选x64版本的MySQL：</p><p><img src="/img/MySQL/37ea882cf41e4b9b859debc197b9eb9e.png" alt="37ea882cf41e4b9b859debc197b9eb9e"></p><p>install Directory是MySQL软件的安装路径<br>Data Directory是<a href="https://so.csdn.net/so/search?q=MySQL%E6%95%B0%E6%8D%AE%E5%BA%93&spm=1001.2101.3001.7020">MySQL数据库</a>数据存放的路径，这里不建议修改，然后next：</p><p><img src="/img/MySQL/c831f5bc5a7840abacaf947e43153487.png" alt="c831f5bc5a7840abacaf947e43153487"></p><p>点击Execute，进行安装前检查：</p><p><img src="/img/MySQL/fdb1472b925d4eda96f677d2e8b89771.png" alt="fdb1472b925d4eda96f677d2e8b89771"></p><p>接下来一路next…</p><p>输入数据库密码，点击next，进入下一步：</p><p><img src="/img/MySQL/5673be0a61e64718a0e2a032be7faa58.png" alt="5673be0a61e64718a0e2a032be7faa58"></p><p>默认数据库名字，点击next，进入下一步：</p><p><img src="/img/MySQL/0419d326424341f1a07f9db518908c77.png" alt="0419d326424341f1a07f9db518908c77"></p><p>剩下的一路next安装即可</p><p><strong>接下来配置系统环境变量</strong></p><p><img src="/img/MySQL/20240711193219819.png" alt="20240711193219819"></p><p>点击环境变量：</p><p><img src="/img/MySQL/9e38e633b509489c8bcd7bfca39c4b21.png" alt="9e38e633b509489c8bcd7bfca39c4b21"></p><p>找到系统环境变量里面的Path：</p><p><img src="/img/MySQL/20240711193407750.png" alt="20240711193407750"></p><p>双击编辑，将自己的安装路径添加进去即可，然后点确认：</p><p><img src="/img/MySQL/20240711193642430.png" alt="20240711193642430"></p><p><img src="/img/MySQL/20240711193457565.png" alt="20240711193457565"></p><p>win+R检测是否安装成功</p><p>打开cmd，输入命令：<code>mysql --version</code></p><p><img src="/img/MySQL/20240711193829947.png" alt="20240711193829947"></p><p>输入mysql -u 用户名 -p 后回车，输入密码，打开mysql的执行窗口</p><p>连接、启动方式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net start mysql80</span><br><span class="line">mysql -u root -p</span><br><span class="line">#输入你之前设置的密码即可</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/20240711194108488.png" alt="20240711194108488"></p><p>至此MySQL已经配置成功</p><h3 id="可视化软件DataGrip的安装"><a href="#可视化软件DataGrip的安装" class="headerlink" title="可视化软件DataGrip的安装"></a>可视化软件DataGrip的安装</h3><p>可视化图形界面可以大大提高我们的操作效率，这里我们选用DataGrip，试用30天，建议咸鱼买一个密钥。</p><p>官网下载：**<a href="https://www.jetbrains.com/datagrip/">DataGrip: The Cross-Platform IDE for Databases &amp;&amp; SQL by JetBrains</a>**</p><p>配置连接：</p><p><img src="/img/MySQL/20240711194706143.png" alt="20240711194706143"></p><p>点击加号，选择MySQL，root权限，输入之前设置的Password即可</p><p><img src="/img/MySQL/20240711194813748.png" alt="20240711194813748"></p><p>点击Download，然后点击OK即可</p><h3 id="什么是MySQL数据库"><a href="#什么是MySQL数据库" class="headerlink" title="什么是MySQL数据库"></a>什么是MySQL数据库</h3><p><img src="/img/MySQL/20240701190936914.png" alt="20240701190936914"></p><h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><p><img src="/img/MySQL/20240701191159432.png" alt="20240701191159432"></p><h3 id="SQL通用语法及分类"><a href="#SQL通用语法及分类" class="headerlink" title="SQL通用语法及分类"></a>SQL通用语法及分类</h3><ul><li>DDL: 数据定义语言，用来定义数据库对象（数据库、表、字段）</li><li>DML: 数据操作语言，用来对数据库表中的数据进行增删改</li><li>DQL: 数据查询语言，用来查询数据库中表的记录</li><li>DCL: 数据控制语言，用来创建数据库用户、控制数据库的控制权限</li></ul><h3 id="DDL-用来定义数据库"><a href="#DDL-用来定义数据库" class="headerlink" title="DDL(用来定义数据库)"></a>DDL(用来定义数据库)</h3><h4 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h4><p><strong>sys为系统数据库</strong></p><p><img src="/img/MySQL/20240701193100318.png" alt="20240701193100318"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查询当前数据库</span><br><span class="line">select database();</span><br></pre></td></tr></table></figure><h4 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">已经在数据库内，查看表名</span><br><span class="line">show tables;</span><br><span class="line">查询表结构</span><br><span class="line">desc [表名]</span><br><span class="line">查询指定表的建表语句</span><br><span class="line">show create table [表名]</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/20240701193729156.png" alt="20240701193729156"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table tb_user(</span><br><span class="line">id int comment &#x27;编号&#x27;,</span><br><span class="line">name varchar(50) comment &#x27;姓名&#x27;,</span><br><span class="line">age int comment &#x27;年龄&#x27;,</span><br><span class="line">gender varchar(1) comment &#x27;性别&#x27;</span><br><span class="line">) comment &#x27;用户表&#x27;;</span><br><span class="line">#这里的comment xxx，即为起别名</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/20240701194318441.png" alt="20240701194318441"></p><h4 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h4><h5 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h5><p><img src="/img/MySQL/20240701194702525.png" alt="20240701194702525"></p><h5 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h5><p><img src="/img/MySQL/20240701194619930.png" alt="20240701194619930"></p><h5 id="日期类型"><a href="#日期类型" class="headerlink" title="日期类型"></a>日期类型</h5><p><img src="/img/MySQL/20240701194749353.png" alt="20240701194749353"></p><p>例1 设计一张员工表信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.编号(纯数字)</span><br><span class="line">2.员工工号(字符串类型，不超过10位)</span><br><span class="line">3.员工姓名(字符串类型，不超过10位)</span><br><span class="line">4.性别(男/女，储存一个汉字)</span><br><span class="line">5.年龄(正常人年龄，不可能储存复数)</span><br><span class="line">6.身份证号(18位身份证，身份证中有x这样的字符)</span><br><span class="line">7.入职时间(取年、月、日)</span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table emp(</span><br><span class="line">id int comment &#x27;编号&#x27;,</span><br><span class="line">workno varchar(10) comment &#x27;工号&#x27;,</span><br><span class="line">name varchar(10) comment &#x27;姓名&#x27;,</span><br><span class="line">gender char(1) comment &#x27;性别&#x27;,</span><br><span class="line">agte tinyint unsigned comment &#x27;年龄&#x27;,</span><br><span class="line">idcard char(18) comment &#x27;身份证号&#x27;,</span><br><span class="line">enterdate date comment &#x27;入职时间&#x27;</span><br><span class="line">)comment &#x27;员工表&#x27;;</span><br></pre></td></tr></table></figure><h4 id="表增删改"><a href="#表增删改" class="headerlink" title="表增删改"></a>表增删改</h4><h5 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table [表名] add [字段名] [类型] [comment 注释] [约束];</span><br><span class="line">alter table emp add job varchar(10) comment &#x27;工作&#x27;;</span><br></pre></td></tr></table></figure><h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--删除表</span><br><span class="line">drop table [if exist] [表名];</span><br><span class="line">--删除并重新创建此表</span><br><span class="line">truncate table [表名]</span><br><span class="line">--删除字段</span><br><span class="line">alter table [表名] drop [字段名];</span><br></pre></td></tr></table></figure><h5 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table [表名] modify [字段名] [类型];</span><br><span class="line">alter table [表名] change [旧字段名] [新字段名] [类型] [comment 注释] [约束];</span><br><span class="line">--将emp表的表名修改为employee</span><br><span class="line">alter table emp rename to employee;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/20240701202746592.png" alt="20240701202746592"></p><h3 id="DML-用来修改对数据库中的表"><a href="#DML-用来修改对数据库中的表" class="headerlink" title="DML(用来修改对数据库中的表)"></a>DML(用来修改对数据库中的表)</h3><h4 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h4><p><img src="/img/MySQL/20240701225024996.png" alt="20240701225024996"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into [表名] (字段名1,字段名2) values (值1,值2)  #一一对应</span><br><span class="line">--全部字段</span><br><span class="line">insert into [表名] values (值1,值2)</span><br></pre></td></tr></table></figure><h4 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into a(id, name) value (1,&#x27;hhh&#x27;);</span><br><span class="line">select * from a;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/20240701225732166.png" alt="20240701225732166"></p><h4 id="修改-1"><a href="#修改-1" class="headerlink" title="修改"></a>修改</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update [表名] set [字段名1=值1],[字段名2=值2],...[where 条件];</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update a set name=&#x27;itname&#x27; where id=1;</span><br><span class="line">select * from  a;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/20240701230423747.png" alt="20240701230423747"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">add date date null comment &#x27;入职日期&#x27;;</span><br><span class="line">--修改所有id为1的日期为2008-01-01</span><br><span class="line">update a set date=&#x27;2008-01-01&#x27; where id=1;</span><br></pre></td></tr></table></figure><h4 id="删除-1"><a href="#删除-1" class="headerlink" title="删除"></a>删除</h4><p><img src="/img/MySQL/20240701231636847.png" alt="20240701231636847"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">delete from [表名] [where 条件]</span><br><span class="line">delete from a where id=&#x27;1&#x27;</span><br><span class="line">--删除所有员工</span><br><span class="line">delete from a;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/20240701231322436.png" alt="20240701231322436"></p><h3 id="DQL-用来查询数据库中表的记录"><a href="#DQL-用来查询数据库中表的记录" class="headerlink" title="&#x3D;&#x3D;DQL(用来查询数据库中表的记录)&#x3D;&#x3D;"></a>&#x3D;&#x3D;DQL(用来查询数据库中表的记录)&#x3D;&#x3D;</h3><h4 id="基础准备"><a href="#基础准备" class="headerlink" title="基础准备"></a>基础准备</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--(1)建表</span><br><span class="line">create table emp(</span><br><span class="line">id int comment &#x27;编号&#x27;,</span><br><span class="line">workno varchar(10) comment &#x27;工号&#x27;,</span><br><span class="line">name varchar(10) comment &#x27;姓名&#x27;,</span><br><span class="line">gender char(1) comment &#x27;性别&#x27;,</span><br><span class="line">age tinyint unsigned comment &#x27;年龄&#x27;,</span><br><span class="line">idcard varchar(18) comment &#x27;身份证号&#x27;,</span><br><span class="line">workaddress varchar(50) comment &#x27;工作地址&#x27;,</span><br><span class="line">entrydate date comment &#x27;入职时间&#x27;</span><br><span class="line">) comment &#x27;员工表&#x27;;</span><br><span class="line">--(2)插入数据</span><br><span class="line">insert into emp (id,workno,name,gender,age,idcard,workaddress,entrydate) value </span><br><span class="line">(1,&#x27;1&#x27;,&#x27;柳岩&#x27;,&#x27;女&#x27;,20,&#x27;432121451523127854&#x27;,&#x27;北京&#x27;,&#x27;2000-01-01&#x27;),</span><br><span class="line">(2,&#x27;2&#x27;,&#x27;张无忌&#x27;,&#x27;男&#x27;,28,&#x27;432121451523127856&#x27;,&#x27;北京&#x27;,&#x27;2010-01-01&#x27;),</span><br><span class="line">(3,&#x27;3&#x27;,&#x27;韦一笑&#x27;,&#x27;男&#x27;,38,&#x27;432121451523127854&#x27;,&#x27;上海&#x27;,&#x27;2009-01-01&#x27;),</span><br><span class="line">(4,&#x27;4&#x27;,&#x27;赵敏&#x27;,&#x27;女&#x27;,18,&#x27;232121451523127854&#x27;,&#x27;北京&#x27;,&#x27;2008-01-01&#x27;),</span><br><span class="line">(5,&#x27;5&#x27;,&#x27;小招&#x27;,&#x27;女&#x27;,23,&#x27;433121451523127854&#x27;,&#x27;上海&#x27;,&#x27;2000-12-01&#x27;),</span><br><span class="line">(6,&#x27;6&#x27;,&#x27;杨上校&#x27;,&#x27;男&#x27;,88,&#x27;432121451523127554&#x27;,&#x27;北京&#x27;,&#x27;1998-01-20&#x27;),</span><br><span class="line">(7,&#x27;7&#x27;,&#x27;哈哈&#x27;,&#x27;女&#x27;,18,&#x27;432121455523127854&#x27;,&#x27;长沙&#x27;,&#x27;1988-01-01&#x27;),</span><br><span class="line">(8,&#x27;8&#x27;,&#x27;柳如烟&#x27;,&#x27;女&#x27;,88,&#x27;432121477773127854&#x27;,&#x27;西安&#x27;,&#x27;1978-01-01&#x27;),</span><br><span class="line">(9,&#x27;9&#x27;,&#x27;大壮&#x27;,&#x27;男&#x27;,29,&#x27;432121451529927854&#x27;,&#x27;江苏&#x27;,&#x27;2012-01-01&#x27;),</span><br><span class="line">(10,&#x27;10&#x27;,&#x27;刘马&#x27;,&#x27;男&#x27;,66,&#x27;433333451523127854&#x27;,&#x27;永州&#x27;,&#x27;2009-08-01&#x27;),</span><br><span class="line">(11,&#x27;11&#x27;,&#x27;新来的&#x27;,&#x27;女&#x27;,29,&#x27;702121451523127854&#x27;,&#x27;郴州&#x27;,&#x27;2024-07-02&#x27;);</span><br></pre></td></tr></table></figure><h4 id="基本查询"><a href="#基本查询" class="headerlink" title="基本查询"></a>基本查询</h4><p><img src="/img/MySQL/20240702174225035.png" alt="20240702174225035"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、查询指定字段 name,workno,age 返回</span><br><span class="line">select name,workno,age from emp;</span><br><span class="line">--2、查询所有字段返回</span><br><span class="line">select * from emp;</span><br><span class="line">--3、查询所有员工的工作地址，起别名</span><br><span class="line">select workaddress as &#x27;工作地址&#x27; from emp;</span><br><span class="line">select workaddress &#x27;工作地址&#x27; from emp;</span><br><span class="line">--4、查询公司员工的上班地址(不要重复)</span><br><span class="line">select distinct workaddress &#x27;工作地址&#x27; from emp;</span><br></pre></td></tr></table></figure><h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><p><img src="/img/MySQL/20240702175027374.png" alt="20240702175027374"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、查询年龄小于等于88的员工信息</span><br><span class="line">select * from emp where age &lt;= 88;</span><br><span class="line">--2、查询没有身份证号的员工信息</span><br><span class="line">select * from emp where idcast is null;</span><br></pre></td></tr></table></figure><h4 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h4><p><strong>null值不参与聚合函数运算</strong></p><p><img src="/img/MySQL/20240702170342199.png" alt="20240702170342199"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、求员工数量</span><br><span class="line">select count(*) from emp;</span><br><span class="line">--2、统计该员工的平均年龄</span><br><span class="line">select avg(age) from emp;</span><br><span class="line">--3、统计该企业员工的最大年龄</span><br><span class="line">select max(age) from emp;</span><br><span class="line">--4、统计该企业员工的最小年龄</span><br><span class="line">select min(age) from emp;</span><br><span class="line">--5、统计西安地区员工的年龄之和</span><br><span class="line">select sum(age) from emp where workaddress=&#x27;西安&#x27;;</span><br></pre></td></tr></table></figure><h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h4><p><img src="/img/MySQL/20240702172134637.png" alt="20240702172134637"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、统计男性员工和女性员工的数量</span><br><span class="line">select gender,count(*) from emp group by gender;</span><br><span class="line">--2、根据性别分组，统计男性员工和女性员工的平均年龄</span><br><span class="line">select gender,avg(age) from emp group by gender;</span><br><span class="line">--3、查询年龄小于45的员工，并根据工作地址区分员工数量大于等于3的工作地址</span><br><span class="line">select workaddress,count(*) from emp where age &lt; 45 group by workaddress having count(*) &gt;= 3;</span><br></pre></td></tr></table></figure><h4 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h4><p><img src="/img/MySQL/20240702173020947.png" alt="20240702173020947"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、根据年龄对公司的员工进行升序、降序排序</span><br><span class="line">select * from emp order by age asc;</span><br><span class="line">select * from emp order by age desc;</span><br><span class="line">--2、根据入职时间，对员工进行降序排序</span><br><span class="line">select * from emp order by entrydate desc;</span><br><span class="line">--3、根据年龄对公司员工先进行升序排序，年龄相同，再按照入职时间进行降序排序</span><br><span class="line">select * from emp order by age asc,entrydate desc;</span><br><span class="line">#若省略asc，则默认升序</span><br></pre></td></tr></table></figure><h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><p><img src="/img/MySQL/20240702173256808.png" alt="20240702173256808"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、查询第1页员工数据，每页展示10条记录</span><br><span class="line">select * from emp limit 0,10;</span><br><span class="line">--2、查询第2页员工数据，每页展示10条记录</span><br><span class="line">select * from emp limit 10,10;</span><br></pre></td></tr></table></figure><h4 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h4><p><img src="/img/MySQL/20240702200546666.png" alt="20240702200546666"></p><h3 id="DCL-用来管理数据库用户"><a href="#DCL-用来管理数据库用户" class="headerlink" title="DCL(用来管理数据库用户)"></a>DCL(用来管理数据库用户)</h3><p><img src="/img/MySQL/20240702211004356.png" alt="20240702211004356"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、创建用户 itcast，只能够在当前主机上访问，密码为123456</span><br><span class="line">create user &#x27;itcast&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">--2、创建用户 heima，可以在任意主机上访问该数据库，密码为123456</span><br><span class="line">create user &#x27;heima&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">--3、修改heima密码</span><br><span class="line">alter user &#x27;heima&#x27;@&#x27;%&#x27; identified with mysql_native_password by &#x27;12345&#x27;;</span><br><span class="line">--4、删除heima用户</span><br><span class="line">drop user &#x27;heima&#x27;@&#x27;%&#x27;;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/20240703002617489.png" alt="20240703002617489"></p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><p><img src="/img/MySQL/20240705133920948.png" alt="20240705133920948"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#concat</span><br><span class="line">select concat(&#x27;Hello&#x27;,&#x27; MySQL&#x27;);</span><br><span class="line">#substring</span><br><span class="line">select substring(&#x27;Hello MySQL&#x27;,1,5);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、工号统一为5位数，不足5位的补0</span><br><span class="line">update emp set workno=lpad(wrokno,5,&#x27;0&#x27;);</span><br></pre></td></tr></table></figure><h3 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h3><p><img src="/img/MySQL/20240705141559294.png" alt="20240705141559294"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、通过数据库的函数，生成一个6位数的随机数验证码</span><br><span class="line">select lpad(round(rand()*1000000,0),6,&#x27;0&#x27;)</span><br></pre></td></tr></table></figure><h3 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h3><p><img src="/img/MySQL/20240705142443112.png" alt="20240705142443112"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select date_add(now(),interval 70 mouth);</span><br><span class="line">select datediff(&#x27;2021-12-01&#x27;,&#x27;2021-10-12&#x27;);</span><br><span class="line">--1、查询所有员工的入职天数，并根据入职天数倒序排序</span><br><span class="line">select name,datediff(curdate(),entrydate) as &#x27;entrydays&#x27; from emp order by entrydays desc;</span><br></pre></td></tr></table></figure><h3 id="流程函数"><a href="#流程函数" class="headerlink" title="流程函数"></a>流程函数</h3><p>实现条件筛选，提高语句的效率</p><p><img src="/img/MySQL/20240705145820737.png" alt="20240705145820737"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、if</span><br><span class="line">select if(false,&#x27;OK&#x27;,&#x27;error&#x27;);</span><br><span class="line">--2、ifnull</span><br><span class="line">select ifnull(&#x27;OK&#x27;,&#x27;Default&#x27;);</span><br><span class="line">#OK</span><br><span class="line">select ifnull(null,&#x27;Default&#x27;);</span><br><span class="line">#Default</span><br><span class="line">--3、查询emp表的员工姓名和工作地址（北京/上海--&gt;一线城市，其他--&gt;二线城市</span><br><span class="line">select name,</span><br><span class="line">(case workaddress</span><br><span class="line">    when &#x27;北京&#x27; then &#x27;一线城市&#x27; </span><br><span class="line">    when &#x27;上海&#x27; then &#x27;一线城市&#x27; </span><br><span class="line">else &#x27;二线城市&#x27; end) as &#x27;工作地址&#x27;,workaddress</span><br><span class="line">from emp;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/20240705150701657.png" alt="20240705150701657"></p><p>例2</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--统计班级各个学员的成绩，展示的规则如下：</span><br><span class="line">--  &gt;=85, 优秀</span><br><span class="line">--  &gt;=60, 及格</span><br><span class="line">--  否则, 不及格</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#建表</span><br><span class="line">create table score(</span><br><span class="line">id int comment &#x27;ID&#x27;,</span><br><span class="line">name varchar(20) comment &#x27;姓名&#x27;,</span><br><span class="line">math int comment &#x27;数学&#x27;,</span><br><span class="line">english int comment &#x27;英语&#x27;,</span><br><span class="line">chinese int comment &#x27;语文&#x27;</span><br><span class="line">)comment &#x27;学院成绩表&#x27;;</span><br><span class="line">#数据准备</span><br><span class="line">insert into score(id,name,math,english,chinese) values (1,&#x27;Tom&#x27;,67,88,95),(2,&#x27;Rose&#x27;,23,66,90),(3,&#x27;Jack&#x27;,56,98,76);</span><br></pre></td></tr></table></figure><p>开始查询</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select id,name,</span><br><span class="line">(case when math&gt;=85 then &#x27;优秀&#x27; when 60&lt;=math&lt;=85 then &#x27;及格&#x27; when math&lt;=60 then &#x27;不及格&#x27; end) &#x27;数学&#x27;,</span><br><span class="line">    (case when english&gt;=85 then &#x27;优秀&#x27; when 60&lt;=english&lt;=85 then &#x27;及格&#x27; when english&lt;=60 then &#x27;不及格&#x27; end) &#x27;英语&#x27;,</span><br><span class="line">    (case when chinese&gt;=85 then &#x27;优秀&#x27; when 60&lt;=chinese&lt;=85 then &#x27;及格&#x27; when chinese&lt;=60 then &#x27;不及格&#x27; end) &#x27;语文&#x27;</span><br><span class="line">      from score;</span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p><img src="/img/MySQL/20240705152752503.png" alt="20240705152752503"></p><h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><p><strong>用于限制存储在表中的数据，保证数据库中数据的正确、有效性和完整性</strong></p><p><img src="/img/MySQL/20240705154420361.png" alt="20240705154420361"></p><p><img src="/img/MySQL/20240705160039343.png" alt="20240705160039343"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#主键</span><br><span class="line">create table user(</span><br><span class="line">id int primary key auto_increment comment &#x27;主键&#x27;,</span><br><span class="line">name varchar(10) not null unique comment &#x27;姓名&#x27;,</span><br><span class="line">age int check ( age &gt;0 &amp;&amp; age &lt;= 120) comment &#x27;年龄&#x27;,</span><br><span class="line">status char(1) default &#x27;1&#x27; comment &#x27;状态&#x27;,</span><br><span class="line">gender char(1) comment &#x27;性别&#x27;</span><br><span class="line">)comment &#x27;用户表&#x27;;</span><br><span class="line">insert into user(name,age,status,gender) values (&#x27;Tom1&#x27;,19,&#x27;1&#x27;,&#x27;男&#x27;),(&#x27;Tom2&#x27;25,&#x27;0&#x27;,&#x27;男&#x27;);</span><br><span class="line">#auto_increment 后续插入主键支持自增</span><br><span class="line">insert into user(name,age,status,gender) values (&#x27;Tom3&#x27;,25,&#x27;0&#x27;,&#x27;男&#x27;);</span><br><span class="line">#若插入失败，也会占用编号，因为它已经向数据库发送申请</span><br></pre></td></tr></table></figure><h3 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h3><p>用来让两张表的数据之间建立连接，从而保证数据的一致性和完整性。</p><p><img src="/img/MySQL/20240706132923673.png" alt="20240706132923673"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table emp add constraint fk_emp_dept_id foreign key (dept_id) references dept(id);</span><br><span class="line">#此时不能删除父表，因为子表还在</span><br><span class="line">#删除外键</span><br><span class="line">alter table emp drop foreign key fk_emp_dept_id;</span><br></pre></td></tr></table></figure><h4 id="外键删除更新行为"><a href="#外键删除更新行为" class="headerlink" title="外键删除更新行为"></a>外键删除更新行为</h4><p><img src="/img/MySQL/20240706134845493.png" alt="20240706134845493"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#cascade</span><br><span class="line">alter table emp add constraint fk_emp_dept_id foreign key (dept_id) references dept(id) on update cascade on delete cascade;</span><br></pre></td></tr></table></figure><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><h3 id="多表关系"><a href="#多表关系" class="headerlink" title="多表关系"></a>多表关系</h3><p><img src="/img/MySQL/20240706135747693.png" alt="20240706135747693"></p><p><img src="/img/MySQL/20240706135925693.png" alt="20240706135925693"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#学生表</span><br><span class="line">create table student(</span><br><span class="line">id int auto_increment primary key comment &#x27;主键ID&#x27;,</span><br><span class="line">name varchar(10) comment &#x27;姓名&#x27;,</span><br><span class="line">no varchar(10) comment &#x27;学号&#x27;</span><br><span class="line">)comment &#x27;学生表&#x27;;</span><br><span class="line"></span><br><span class="line">insert into student values (null,&#x27;我靠&#x27;,&#x27;05020231&#x27;),(null,&#x27;holy&#x27;,&#x27;05020232&#x27;),(null,&#x27;shit&#x27;,&#x27;05020233&#x27;),(null,&#x27;bro&#x27;,&#x27;05020234&#x27;),(null,&#x27;m3&#x27;,&#x27;05020235&#x27;);</span><br><span class="line">#课程表</span><br><span class="line">create table course(</span><br><span class="line">id int auto_increment primary key comment &#x27;主键ID&#x27;,</span><br><span class="line">name varchar(10) comment &#x27;课程名称&#x27;</span><br><span class="line">) comment &#x27;课程表&#x27;;</span><br><span class="line"></span><br><span class="line">insert into course values (null,&#x27;Java&#x27;),(null,&#x27;PHP&#x27;),(null,&#x27;MySQL&#x27;),(null,&#x27;Python&#x27;);</span><br><span class="line">#学生课程中间表</span><br><span class="line">create table student_course(</span><br><span class="line">id int auto_increment primary key comment &#x27;主键&#x27;,</span><br><span class="line">studentid int not null comment &#x27;学生ID&#x27;,</span><br><span class="line">courseid int not null comment &#x27;课程ID&#x27;,</span><br><span class="line">constraint fk_courseid foreign key (courseid) references course (id),</span><br><span class="line">constraint fk_studentid foreign key (studentid) references student (id)</span><br><span class="line">)comment &#x27;学生课程中间表&#x27;;</span><br><span class="line"></span><br><span class="line">insert into student_course values(null,1,1),(null,1,2),(null,1,3),(null,2,2),(null,3,4);</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/20240706141703813.png" alt="20240706141703813"></p><p><img src="/img/MySQL/20240706141716234.png" alt="20240706141716234"></p><p><img src="/img/MySQL/20240706141728458.png" alt="20240706141728458"></p><p><img src="/img/MySQL/20240706141851668.png" alt="20240706141851668"></p><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><strong>消除无效笛卡尔积</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp, dept where emp.dept_id=dept.id;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/20240708181229542.png" alt="20240708181229542"></p><h4 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h4><p><img src="/img/MySQL/20240708181900776.png" alt="20240708181900776"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、查询每一个员工的姓名，及关联部门的名称(隐式内连接)</span><br><span class="line">select emp.name, dept.name from emp,dept where emp.dept_id=dept.id;</span><br><span class="line">--2、查询每一个员工的姓名，及关联的部门的名称(显式内连接)</span><br><span class="line">select emp.name,dept.name from emp inner join dept on emp.dept_id=dept.id;</span><br></pre></td></tr></table></figure><h4 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h4><p><img src="/img/MySQL/20240708214515491.png" alt="20240708214515491"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、查询emp表的所有数据，和对应的部门信息(左外连接)</span><br><span class="line">select emp.*,dept.* from emp left outer join dept on emp.dept_id=dept.id;</span><br><span class="line">--2、查询emp表的所有数据，和对应的部门信息(右外连接)</span><br><span class="line">select emp.*,dept.* from emp right outer join dept on emp.dept_id=dept.id;</span><br></pre></td></tr></table></figure><h4 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h4><p><img src="/img/MySQL/20240708215323708.png" alt="20240708215323708"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、查询员工及其所属领导的名字</span><br><span class="line">select a.name , b.name from emp a ,emp b where a.managerid=b.managerid;</span><br><span class="line">--2、查询所有员工emp及其领导的名字emp，如果员工没有领导，也需要查询出来</span><br><span class="line">select a.name &#x27;员工&#x27; ,b.name &#x27;领导&#x27; from emp a left join emp b on a.managerid =b.id</span><br></pre></td></tr></table></figure><h4 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、查询薪资低于5000，年龄大于50的员工</span><br><span class="line">select * from emp where salary &lt; 5000</span><br><span class="line">union all</span><br><span class="line">select * from emp where age &gt; 50</span><br><span class="line">#去掉all，all即为直接合并</span><br><span class="line">select * from emp where salary &lt; 5000</span><br><span class="line">union</span><br><span class="line">select * from emp where age &gt; 50</span><br></pre></td></tr></table></figure><h4 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h4><p><img src="/img/MySQL/20240708222829077.png" alt="20240708222829077"></p><h5 id="标量子查询"><a href="#标量子查询" class="headerlink" title="标量子查询"></a>标量子查询</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、查询&quot;销售部&quot;部门的所有员工信息</span><br><span class="line">--a、查询&quot;销售部&quot;部门ID</span><br><span class="line">select id from dept where name=&#x27;销售部&#x27;;</span><br><span class="line">--b、根据销售部部门ID，查询员工信息</span><br><span class="line">seslect * from emp where dept_id=(select id from dept where name=&#x27;销售部&#x27;);</span><br><span class="line">--2、查询在&quot;柳岩&quot;入职后的员工信息</span><br><span class="line">--a、查询 柳岩 的入职信息</span><br><span class="line">select entrydate from emp where name=&#x27;柳岩&#x27;;</span><br><span class="line">--b、查询指定入职信息之后入职的员工信息</span><br><span class="line">select * from emp where entrydate&gt;(select entrydate from emp where name=&#x27;柳岩&#x27;);</span><br></pre></td></tr></table></figure><h5 id="列子查询"><a href="#列子查询" class="headerlink" title="列子查询"></a>列子查询</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、查询&quot;销售部&quot;和&quot;市场部&quot;的所有员工信息</span><br><span class="line">select * from emp where dept_id in (select id from dept where name=&#x27;销售部&#x27; or name=&#x27;市场部&#x27;);</span><br><span class="line">--2、查询比 研发部 所有人年龄都小的员工信息</span><br><span class="line">select id from dept where name=&#x27;研发部&#x27;;</span><br><span class="line">1;</span><br><span class="line">select * from emp where age &lt; all(select age from emp where dept_id=(select id from dept where name=&#x27;研发部&#x27;));</span><br><span class="line">--3、查询比 研发部 其中任意一人年龄小的员工信息</span><br><span class="line">select * from emp where age &lt; any (select age from emp where dept_id=(select id from dept where name=&#x27;研发部&#x27;));</span><br></pre></td></tr></table></figure><h5 id="行子查询"><a href="#行子查询" class="headerlink" title="行子查询"></a>行子查询</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、查询与&quot;张无忌&quot;的薪资及其直属领导相同的员工信息</span><br><span class="line">select * from emp where (salary,managerid) = (select salary,managerid from emp where name=&#x27;张无忌&#x27;);</span><br></pre></td></tr></table></figure><h5 id="表子查询"><a href="#表子查询" class="headerlink" title="表子查询"></a>表子查询</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、查询与&quot;新来的&quot;,&quot;刘马&quot;的职位和薪资相同的员工信息</span><br><span class="line">select * from emp where (job,salary) in (select job,salary from emp where name= &quot;新来的&quot; or name=&quot;刘马&quot;);</span><br><span class="line">--2、查询入职日期是&#x27;2006-01-21&#x27;之后的员工信息，及其部门信息</span><br><span class="line">select e.*,d.* from (select * from emp where entrydate &gt; &#x27;2006-01-21&#x27;) e left join dept d on e.dept_id=d.id;</span><br></pre></td></tr></table></figure><h3 id="案例"><a href="#案例" class="headerlink" title="&#x3D;&#x3D;案例&#x3D;&#x3D;"></a>&#x3D;&#x3D;案例&#x3D;&#x3D;</h3><p><strong>员工信息关系图</strong></p><p>这里注意部门表的id也设置为主键</p><p><img src="/img/MySQL/20240711151223733.png" alt="20240711151223733"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#部门表</span><br><span class="line">create table dept(</span><br><span class="line">    id   int primary key comment &#x27;部门号&#x27;,</span><br><span class="line">    name varchar(10)  comment &#x27;部门名称&#x27;</span><br><span class="line">)comment &#x27;部门表&#x27;;</span><br><span class="line"></span><br><span class="line">#工资等级表</span><br><span class="line">create table salgrade(</span><br><span class="line">grade int primary key comment &#x27;工资等级&#x27;,</span><br><span class="line">losal int comment &#x27;最低工资&#x27;,</span><br><span class="line">hisal int comment &#x27;最低工资&#x27;</span><br><span class="line">)comment &#x27;薪资等级表&#x27;;</span><br><span class="line"></span><br><span class="line">#员工表</span><br><span class="line">create table emp(</span><br><span class="line">    id         int auto_increment comment &#x27;编号&#x27; primary key,</span><br><span class="line">    workno      varchar(10)       comment &#x27;工号&#x27;,</span><br><span class="line">    name        varchar(10)       comment &#x27;姓名&#x27;,</span><br><span class="line">    gender      char              comment &#x27;性别&#x27;,</span><br><span class="line">    age         tinyint unsigned  comment &#x27;年龄&#x27;,</span><br><span class="line">    idcard      varchar(18)       comment &#x27;身份证号&#x27;,</span><br><span class="line">    workaddress varchar(50)       comment &#x27;工作地址&#x27;,</span><br><span class="line">    entrydate   date              comment &#x27;入职时间&#x27;,</span><br><span class="line">    job         varchar(10)       comment &#x27;工作&#x27;,</span><br><span class="line">    salary      int               comment &#x27;工资&#x27;,</span><br><span class="line">    leaderidint              comment &#x27;所属领导&#x27;,</span><br><span class="line">    salgrade_grade int            comment &#x27;工资等级&#x27;,</span><br><span class="line">    dept_id     int               comment &#x27;部门号&#x27;,</span><br><span class="line">    constraint fk_emp_dept_id</span><br><span class="line">        foreign key (dept_id) references dept (id),</span><br><span class="line">    constraint fk_emp_salgrade_grade</span><br><span class="line">        foreign key (salgrade_grade) references salgrade (grade)</span><br><span class="line">)</span><br><span class="line">    comment &#x27;员工表&#x27;;</span><br></pre></td></tr></table></figure><p>插入数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#工资等级表</span><br><span class="line">insert into salgrade values(1,0,3000),(2,3001,5000),(3,5001,8000),(4,8001,10000),(5,10001,15000),(6,15001,20000),(7,20001,25000),(8,25001,30000);</span><br><span class="line"></span><br><span class="line">#部门表</span><br><span class="line">insert into dept values</span><br><span class="line">(1,&#x27;研发部&#x27;),(2,&#x27;市场部&#x27;),(3,&#x27;财务部&#x27;),(4,&#x27;销售部&#x27;),(5,&#x27;总经办&#x27;),(6,&#x27;人事部&#x27;);</span><br><span class="line"></span><br><span class="line">#员工表</span><br><span class="line">insert into emp</span><br><span class="line">(id, workno, name, gender, age, idcard, workaddress, entrydate, job, salary, leaderid, salgrade_grade, dept_id)</span><br><span class="line">values</span><br><span class="line">(1,&#x27;1&#x27;,&#x27;柳岩&#x27;,&#x27;女&#x27;,20,&#x27;432121451523127854&#x27;,&#x27;北京&#x27;,&#x27;2004-01-01&#x27;,&#x27;交际花&#x27;,26666,9,6,5),</span><br><span class="line">(2,&#x27;2&#x27;,&#x27;张无忌&#x27;,&#x27;男&#x27;,24,&#x27;432121451523127856&#x27;,&#x27;北京&#x27;,&#x27;2000-01-01&#x27;,&#x27;算法程序员&#x27;,18500,9,6,1),</span><br><span class="line">(3,&#x27;3&#x27;,&#x27;韦一笑&#x27;,&#x27;男&#x27;,25,&#x27;432121451523127854&#x27;,&#x27;上海&#x27;,&#x27;1999-01-01&#x27;,&#x27;python程序员&#x27;,14500,2,5,1),</span><br><span class="line">(4,&#x27;4&#x27;,&#x27;赵敏&#x27;,&#x27;女&#x27;,38,&#x27;232121451523127854&#x27;,&#x27;武汉&#x27;,&#x27;1986-01-01&#x27;,&#x27;运维&#x27;,12500,2,5,1),</span><br><span class="line">(5,&#x27;5&#x27;,&#x27;小招&#x27;,&#x27;女&#x27;,24,&#x27;433121451523127854&#x27;,&#x27;上海&#x27;,&#x27;2000-12-01&#x27;,&#x27;数据库工程师&#x27;,17000,2,6,1),</span><br><span class="line">(6,&#x27;6&#x27;,&#x27;杨上校&#x27;,&#x27;男&#x27;,88,&#x27;432121451523127554&#x27;,&#x27;北京&#x27;,&#x27;1998-01-20&#x27;,&#x27;司机&#x27;,6500,9,3,5),</span><br><span class="line">(7,&#x27;7&#x27;,&#x27;哈哈&#x27;,&#x27;女&#x27;,18,&#x27;432121455523127854&#x27;,&#x27;长沙&#x27;,&#x27;1988-01-01&#x27;,&#x27;采购员&#x27;,9000,9,4,2),</span><br><span class="line">(8,&#x27;8&#x27;,&#x27;柳如烟&#x27;,&#x27;女&#x27;,88,&#x27;432121477773127854&#x27;,&#x27;西安&#x27;,&#x27;1978-01-01&#x27;,&#x27;程序员鼓励师&#x27;,23000,1,7,5),</span><br><span class="line">(9,&#x27;9&#x27;,&#x27;腰子哥&#x27;,&#x27;男&#x27;,54,&#x27;432121451529927854&#x27;,&#x27;江苏&#x27;,&#x27;1970-01-01&#x27;,&#x27;老总&#x27;,null,null,null,5),</span><br><span class="line">(10,&#x27;10&#x27;,&#x27;刘马&#x27;,&#x27;男&#x27;,66,&#x27;433333451523127854&#x27;,&#x27;永州&#x27;,&#x27;2009-08-01&#x27;,&#x27;销售&#x27;,8500,9,4,4),</span><br><span class="line">(11,&#x27;11&#x27;,&#x27;新来的&#x27;,&#x27;女&#x27;,29,&#x27;702121451523127854&#x27;,&#x27;郴州&#x27;,&#x27;2024-07-02&#x27;,null,null,null,null,null),</span><br><span class="line">(12,&#x27;12&#x27;,&#x27;吗嘛哈&#x27;,&#x27;男&#x27;,36,&#x27;553333451523127854&#x27;,&#x27;怀化&#x27;,&#x27;1988-08-01&#x27;,&#x27;人事&#x27;,13500,9,5,6);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/20240711154352997.png" alt="20240711154352997"></p><p><img src="/img/MySQL/20240711154502800.png" alt="20240711154502800"></p><p><img src="/img/MySQL/20240711154533951.png" alt="20240711154533951"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--1、查询员工的姓名、年龄、职位、部门信息(隐式内连接)</span><br><span class="line">select emp.name,emp.age,emp.job,emp.dept_id from emp,dept where emp.dept_id=dept.id;</span><br><span class="line"></span><br><span class="line">--2、查询年龄小于30岁的员工的姓名、年龄、职位、部门信息(显式内连接)</span><br><span class="line">select emp.name,emp.age,emp.job,emp.dept_id from emp inner join dept on emp.dept_id=dept.id  where emp.age &lt; 30;</span><br><span class="line"></span><br><span class="line">--3、查询所有员工的部门ID、部门名称</span><br><span class="line">select distinct e.id,d.name from emp e ,dept d where e.dept_id=d.id;</span><br><span class="line">#左外连接</span><br><span class="line">select emp.name,emp.dept_id,dept.name from emp left outer join dept on emp.dept_id=dept.id;</span><br><span class="line"></span><br><span class="line">--4、查询所有年龄大于35岁的员工，及其归属的部门名称；若没有分配部门，也要显示出来</span><br><span class="line">#左外连接</span><br><span class="line">select emp.name,dept.name from emp left outer join dept on emp.dept_id=dept.id where emp.age &lt; 35;</span><br><span class="line"></span><br><span class="line">--5、查询所有员工的工资等级</span><br><span class="line">select emp.name,emp.salgrade_grade from emp;</span><br><span class="line"></span><br><span class="line">--6、查询 研发部 所有员工的信息及工资等级</span><br><span class="line">select distinct emp.name,emp.salary,emp.salgrade_grade from emp right outer join salgrade on salgrade.losal&lt;emp.salary&lt;salgrade.hisal where emp.dept_id=1;</span><br><span class="line"></span><br><span class="line">--7、查询 研发部 员工的平均工资</span><br><span class="line">select avg(emp.salary) from emp where emp.dept_id=1;</span><br><span class="line"></span><br><span class="line">--8、查询工资比 小招 高的员工信息</span><br><span class="line">select emp.* from emp where salary &gt; (select emp.salary from emp where emp.name=&#x27;小招&#x27;);</span><br><span class="line"></span><br><span class="line">--9、查询比平均薪资高的员工信息</span><br><span class="line">select emp.* from emp where salary &gt; (select avg(emp.salary) from emp);</span><br><span class="line"></span><br><span class="line">--10、查询低于本部门工资的员工信息</span><br><span class="line">select * from emp e2 where e2.salary &lt; (select avg(e1.salary) from emp e1 where e1.dept_id = e2.dept_id);</span><br><span class="line">#检验</span><br><span class="line">select *,(select avg(e1.salary) from emp e1 where e1.dept_id = e2.dept_id) &#x27;平均薪资&#x27; from emp e2 where e2.salary &lt; (select avg(e1.salary) from emp e1 where e1.dept_id = e2.dept_id);</span><br><span class="line"></span><br><span class="line">--11、查询所有的部门信息，并统计部门的员工人数</span><br><span class="line">#子查询</span><br><span class="line">select d.id, d.name ,(select count(*) from emp e where e.dept_id=d.id) &#x27;人数&#x27; from dept d;</span><br><span class="line"></span><br><span class="line">*--12、查询之前学生成绩表中所有学生的选课情况，展示出学生姓名，学号，课程名称</span><br><span class="line">#student.id=studenidt_course.studentid,course.id=stuent_course.courseid</span><br><span class="line">select s.name , c.name from student s,stuent_course sc ,course c where s.id=sc.studentid and c.id=sc.courseid;</span><br></pre></td></tr></table></figure><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p><img src="/img/MySQL/20240709144205065.png" alt="20240709144205065"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table account(</span><br><span class="line">id int auto_increment primary key comment &#x27;主键ID&#x27;,</span><br><span class="line">name varchar(10) comment &#x27;姓名&#x27;,</span><br><span class="line">money int comment &#x27;余额&#x27;</span><br><span class="line">)comment &#x27;账号表&#x27;;</span><br><span class="line">insert into account(id,name,money) values(null,&#x27;张三&#x27;,2000),(null,&#x27;李四&#x27;,2000),(null,&#x27;王五&#x27;,8000);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#张三给李四转账1000</span><br><span class="line">--李四</span><br><span class="line">update account set money = money+1000 where name=&#x27;李四&#x27;;</span><br><span class="line">--张三</span><br><span class="line">update account set money = money-1000 where name=&#x27;张三&#x27;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set @@autocommit=0;    --设置为手动提交，运行事务操作之后得再执行事务提交</span><br><span class="line">--提交事务</span><br><span class="line">commit;</span><br><span class="line">--一旦执行错误，需要执行回滚操作</span><br><span class="line">rollback;</span><br></pre></td></tr></table></figure><h3 id="事务操作"><a href="#事务操作" class="headerlink" title="事务操作"></a>事务操作</h3><p><img src="/img/MySQL/20240709145733165.png" alt="20240709145733165"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start transaction/或begin;</span><br><span class="line">#张三给李四转账1000</span><br><span class="line">--李四</span><br><span class="line">update account set money = money+1000 where name=&#x27;李四&#x27;;</span><br><span class="line">程序出现异常...</span><br><span class="line">--张三</span><br><span class="line">update account set money = money-1000 where name=&#x27;张三&#x27;;</span><br><span class="line">--出现错误仍需回滚</span><br><span class="line">rollback;</span><br></pre></td></tr></table></figure><h3 id="事务四大特性"><a href="#事务四大特性" class="headerlink" title="事务四大特性"></a>事务四大特性</h3><p><img src="/img/MySQL/20240709150413356.png" alt="20240709150413356"></p><h3 id="并发事务问题"><a href="#并发事务问题" class="headerlink" title="并发事务问题"></a>并发事务问题</h3><p><strong>脏读</strong></p><p>A事务读取到了B事务未提交的数据</p><p><strong>不可重复读</strong></p><p>一个事务先后读取同一条记录，但两次读取的数据不同，称之为不可重复读</p><p><strong>幻读</strong></p><p>一个事务按照条件查询数据时，没有对应的数据行，但是在插入行数据时，又发现这行数据已经存在，好像出现了“幻影”</p><h3 id="事务隔离级别"><a href="#事务隔离级别" class="headerlink" title="事务隔离级别"></a>事务隔离级别</h3><p><img src="/img/MySQL/20240709181741158.png" alt="20240709181741158"></p><h2 id="MySQL常用命令大全"><a href="#MySQL常用命令大全" class="headerlink" title="MySQL常用命令大全"></a>MySQL常用命令大全</h2><h3 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h3><table><thead><tr><th>操作</th><th>命令</th></tr></thead><tbody><tr><td>连接到 MySQL 数据库</td><td><code>mysql -u 用户名 -p</code></td></tr><tr><td>查看所有数据库</td><td><code>SHOW DATABASES;</code></td></tr><tr><td>选择一个数据库</td><td><code>USE 数据库名;</code></td></tr><tr><td>查看所有表</td><td><code>SHOW TABLES;</code></td></tr><tr><td>查看表结构</td><td><code>DESCRIBE 表名;</code> 或 <code>SHOW COLUMNS FROM 表名;</code></td></tr><tr><td>创建一个新数据库</td><td><code>CREATE DATABASE 数据库名;</code></td></tr><tr><td>删除一个数据库</td><td><code>DROP DATABASE 数据库名;</code></td></tr><tr><td>创建一个新表</td><td><code>CREATE TABLE 表名 (列名1 数据类型 [约束], 列名2 数据类型 [约束], ...);</code></td></tr><tr><td>删除一个表</td><td><code>DROP TABLE 表名;</code></td></tr><tr><td>插入数据</td><td><code>INSERT INTO 表名 (列1, 列2, ...) VALUES (值1, 值2, ...);</code></td></tr><tr><td>查询数据</td><td><code>SELECT 列1, 列2, ... FROM 表名 WHERE 条件;</code></td></tr><tr><td>更新数据</td><td><code>UPDATE 表名 SET 列1 = 值1, 列2 = 值2, ... WHERE 条件;</code></td></tr><tr><td>删除数据</td><td><code>DELETE FROM 表名 WHERE 条件;</code></td></tr><tr><td>创建用户</td><td><code>CREATE USER &#39;用户名&#39;@&#39;主机&#39; IDENTIFIED BY &#39;密码&#39;;</code></td></tr><tr><td>授权用户</td><td><code>GRANT 权限 ON 数据库名.* TO &#39;用户名&#39;@&#39;主机&#39;;</code></td></tr><tr><td>刷新权限</td><td><code>FLUSH PRIVILEGES;</code></td></tr><tr><td>查看当前用户</td><td><code>SELECT USER();</code></td></tr><tr><td>退出 MySQL</td><td><code>EXIT;</code></td></tr></tbody></table><h3 id="数据库相关命令"><a href="#数据库相关命令" class="headerlink" title="数据库相关命令"></a>数据库相关命令</h3><p>下面是与 MySQL 数据库操作相关的命令，包括创建、删除和修改数据库等操作：</p><table><thead><tr><th>操作</th><th>命令</th></tr></thead><tbody><tr><td><strong>创建数据库</strong></td><td><code>CREATE DATABASE 数据库名;</code></td></tr><tr><td><strong>删除数据库</strong></td><td><code>DROP DATABASE 数据库名;</code></td></tr><tr><td><strong>修改数据库编码格式和排序规则</strong></td><td><code>ALTER DATABASE 数据库名 DEFAULT CHARACTER SET 编码格式 DEFAULT COLLATE 排序规则;</code></td></tr><tr><td><strong>查看所有数据库</strong></td><td><code>SHOW DATABASES;</code></td></tr><tr><td><strong>查看数据库详细信息</strong></td><td><code>SHOW CREATE DATABASE 数据库名;</code></td></tr><tr><td><strong>选择数据库</strong></td><td><code>USE 数据库名;</code></td></tr><tr><td><strong>查看数据库的状态信息</strong></td><td><code>SHOW STATUS;</code></td></tr><tr><td><strong>查看数据库的错误信息</strong></td><td><code>SHOW ERRORS;</code></td></tr><tr><td><strong>查看数据库的警告信息</strong></td><td><code>SHOW WARNINGS;</code></td></tr><tr><td><strong>查看数据库的表</strong></td><td><code>SHOW TABLES;</code></td></tr><tr><td><strong>查看表的结构</strong></td><td><code>DESC 表名;</code> <code>DESCRIBE 表名;</code> <code>SHOW COLUMNS FROM 表名;</code> <code>EXPLAIN 表名;</code></td></tr><tr><td><strong>创建表</strong></td><td><code>CREATE TABLE 表名 (列名1 数据类型 [约束], 列名2 数据类型 [约束], ...);</code></td></tr><tr><td><strong>删除表</strong></td><td><code>DROP TABLE 表名;</code></td></tr><tr><td><strong>修改表结构</strong></td><td><code>ALTER TABLE 表名 ADD 列名 数据类型 [约束];</code> <code>ALTER TABLE 表名 DROP 列名;</code> <code>ALTER TABLE 表名 MODIFY 列名 数据类型 [约束];</code></td></tr><tr><td><strong>查看表的创建 SQL</strong></td><td><code>SHOW CREATE TABLE 表名;</code></td></tr></tbody></table><h3 id="数据表相关命令"><a href="#数据表相关命令" class="headerlink" title="数据表相关命令"></a>数据表相关命令</h3><p>以下是与 MySQL 数据表相关的常用命令，包括创建、修改、删除表以及查看表的结构和数据等操作：</p><table><thead><tr><th>操作</th><th>命令</th></tr></thead><tbody><tr><td><strong>创建表</strong></td><td><code>CREATE TABLE 表名 (列名1 数据类型 [约束], 列名2 数据类型 [约束], ...);</code></td></tr><tr><td><strong>删除表</strong></td><td><code>DROP TABLE 表名;</code></td></tr><tr><td><strong>修改表结构</strong></td><td>添加列: <code>ALTER TABLE 表名 ADD 列名 数据类型 [约束];</code> 删除列: <code>ALTER TABLE 表名 DROP 列名;</code> 修改列: <code>ALTER TABLE 表名 MODIFY 列名 数据类型 [约束];</code> 重命名列: <code>ALTER TABLE 表名 CHANGE 旧列名 新列名 数据类型 [约束];</code></td></tr><tr><td><strong>查看表结构</strong></td><td><code>DESC 表名;</code> <code>DESCRIBE 表名;</code> <code>SHOW COLUMNS FROM 表名;</code> <code>EXPLAIN 表名;</code></td></tr><tr><td><strong>查看表的创建 SQL</strong></td><td><code>SHOW CREATE TABLE 表名;</code></td></tr><tr><td><strong>查看表中的所有数据</strong></td><td><code>SELECT * FROM 表名;</code></td></tr><tr><td><strong>插入数据</strong></td><td><code>INSERT INTO 表名 (列1, 列2, ...) VALUES (值1, 值2, ...);</code></td></tr><tr><td><strong>更新数据</strong></td><td><code>UPDATE 表名 SET 列1 = 值1, 列2 = 值2, ... WHERE 条件;</code></td></tr><tr><td><strong>删除数据</strong></td><td><code>DELETE FROM 表名 WHERE 条件;</code></td></tr><tr><td><strong>查看表的索引</strong></td><td><code>SHOW INDEX FROM 表名;</code></td></tr><tr><td><strong>创建索引</strong></td><td><code>CREATE INDEX 索引名 ON 表名 (列名);</code></td></tr><tr><td><strong>删除索引</strong></td><td><code>DROP INDEX 索引名 ON 表名;</code></td></tr><tr><td><strong>查看表的约束</strong></td><td><code>SHOW CREATE TABLE 表名;</code> (约束信息会包含在创建表的 SQL 中)</td></tr><tr><td><strong>查看表的统计信息</strong></td><td><code>SHOW TABLE STATUS LIKE &#39;表名&#39;;</code></td></tr></tbody></table><h3 id="MySQL-事务相关命令"><a href="#MySQL-事务相关命令" class="headerlink" title="MySQL 事务相关命令"></a>MySQL 事务相关命令</h3><p>以下是与 MySQL 事务相关的常用命令：</p><table><thead><tr><th>操作</th><th>命令</th></tr></thead><tbody><tr><td><strong>开始事务</strong></td><td><code>START TRANSACTION;</code> 或 <code>BEGIN;</code></td></tr><tr><td><strong>提交事务</strong></td><td><code>COMMIT;</code></td></tr><tr><td><strong>回滚事务</strong></td><td><code>ROLLBACK;</code></td></tr><tr><td><strong>查看当前事务的状态</strong></td><td><code>SHOW ENGINE INNODB STATUS;</code> (可查看 InnoDB 存储引擎的事务状态)</td></tr><tr><td><strong>锁定表以进行事务操作</strong></td><td><code>LOCK TABLES 表名 WRITE;</code> 或 <code>LOCK TABLES 表名 READ;</code></td></tr><tr><td><strong>释放锁定的表</strong></td><td><code>UNLOCK TABLES;</code></td></tr><tr><td><strong>设置事务的隔离级别</strong></td><td><code>SET TRANSACTION ISOLATION LEVEL READ COMMITTED;</code> <code>SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;</code> <code>SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;</code> <code>SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;</code></td></tr></tbody></table><p>注明：基础篇已完结，本学习分享大部分记录了本人学习<a href="https://www.itcast.cn/">黑马程序员</a>MySQL系列课程的笔记，主要便于个人复习，也希望能给各位带来帮助，如有任何不足之处请指正！</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
